{
  "header": {
      "features": "Функции",
      "news": "Новости",
      "faq": "Часто задаваемые вопросы",
      "faqLink": "FAQ",
      "docs": "Документация",
      "updates": "Обновления",
      "selectLanguage": "Выбрать язык",
      "changeLanguageTooltip": "Изменить язык",
      "lightMode": "Светлая тема",
      "darkMode": "Темная тема",
      "openMenu": "Открыть меню",
      "closeMenu": "Закрыть меню",
      "settings": "Настройки",
      "signOut": "Выйти",
      "deleteAccount": "Удалить аккаунт",
      "deleteAccountConfirmTitle": "Подтвердите удаление аккаунта",
      "deleteAccountConfirmMessage": "Вы уверены, что хотите удалить свой аккаунт? Это действие нельзя отменить.",
      "cancel": "Отмена",
      "confirmDelete": "Подтвердить удаление",
      "signIn": "Войти"
    },
    "hero": {
      "title": "Добро пожаловать в BrainMessenger",
      "subtitle": "Ваша умная платформа для общения",
      "getStarted": "Начать",
      "learnMore": "Узнать больше",
      "connectSmarterTitle": "Общайтесь умнее с BrainMessenger",
      "connectSmarterSubtitle": "Оцените новое поколение мессенджеров с расширенными функциями, непревзойденной безопасностью и бесперебойной связью на всех ваших устройствах.",
      "downloadButton": "Скачать",
      "downloadAndroid": "Скачать для Android"
    },
    "features": {
      "featuresTitle": "Ключевые особенности",
      "featuresSubtitle": "Узнайте, что делает нас уникальными",
      "secureMessaging": "Безопасные сообщения",
      "secureMessagingDesc": "Сквозное шифрование для вашей конфиденциальности",
      "smartAssistant": "Умный помощник",
      "smartAssistantDesc": "Помощь на основе ИИ всегда под рукой",
      "crossPlatform": "Кроссплатформенность",
      "crossPlatformDesc": "Используйте на любом устройстве, где угодно",
      "groupChats": "Групповые чаты",
      "groupChatsDesc": "Общайтесь с несколькими людьми одновременно",
      "privacyFirst": "Приватность превыше всего",
      "privacyFirstDesc": "Ваши данные всегда ваши"
    },
    "news": {
      "latestNews": "Последние новости",
      "readMore": "Подробнее",
      "previousButton": "Предыдущая новость",
      "nextButton": "Следующая новость",
      "pauseAutoplay": "Приостановить автовоспроизведение",
      "playAutoplay": "Воспроизвести автоматически"
    },
    "roadmap": {
      "title": {
        "section": "Дорожная карта",
        "projectLaunch": "Запуск проекта",
        "enhancedSecurity": "Улучшенная безопасность",
        "advancedCollaboration": "Расширенное сотрудничество",
        "mobileEnhancement": "Улучшение мобильных приложений",
        "aiIntegration": "Интеграция ИИ",
        "globalExpansion": "Глобальное расширение",
        "enterpriseSolutions": "Корпоративные решения",
        "futureInnovation": "Будущие инновации"
      },
      "subtitle": {
        "section": "Наше видение будущего"
      },
      "status": {
        "completed": "Завершено",
        "inProgress": "В процессе",
        "upcoming": "Предстоящее"
      },
      "description": {
        "projectLaunch": "Первоначальный запуск BrainMessenger с основными функциями.",
        "enhancedSecurity": "Укрепление протоколов и функций безопасности.",
        "advancedCollaboration": "Внедрение расширенных инструментов для совместной работы.",
        "mobileEnhancement": "Улучшение опыта использования мобильного приложения.",
        "aiIntegration": "Интеграция функций на основе ИИ для более умного общения.",
        "globalExpansion": "Расширение охвата BrainMessenger по всему миру.",
        "enterpriseSolutions": "Разработка решений для корпоративных клиентов.",
        "futureInnovation": "Изучение и внедрение будущих технологий."
      },
      "features": {
        "secureMessagingInfrastructure": "Инфраструктура безопасного обмена сообщениями",
        "crossPlatformCompatibility": "Кроссплатформенная совместимость",
        "basicUserInterface": "Базовый пользовательский интерфейс",
        "endToEndEncryption": "Сквозное шифрование",
        "twoFactorAuthentication": "Двухфакторная аутентификация",
        "fileSharingCapabilities": "Возможности обмена файлами",
        "teamWorkspaces": "Рабочие пространства для команд",
        "realTimeCollaboration": "Совместная работа в реальном времени",
        "advancedFileSharing": "Расширенный обмен файлами",
        "nativeMobileApps": "Нативные мобильные приложения",
        "offlineFunctionality": "Офлайн-функциональность",
        "pushNotifications": "Push-уведомления",
        "smartMessageCategorization": "Умная категоризация сообщений",
        "automatedResponses": "Автоматические ответы",
        "contentAnalysis": "Анализ контента",
        "multiLanguageSupport": "Поддержка нескольких языков",
        "regionalDataCenters": "Региональные центры обработки данных",
        "culturalAdaptations": "Культурные адаптации",
        "advancedAdminControls": "Расширенные административные элементы управления",
        "customIntegrations": "Пользовательские интеграции",
        "enterpriseSupport": "Корпоративная поддержка",
        "emergingTechnologies": "Новые технологии",
        "communityDrivenFeatures": "Функции, ориентированные на сообщество",
        "platformExpansion": "Расширение платформы"
      },
      "date": {
        "jan2024": "Январь 2024",
        "mar2024": "Март 2024",
        "jun2024": "Июнь 2024",
        "sep2024": "Сентябрь 2024",
        "nov2024": "Ноябрь 2024",
        "jan2025": "Январь 2025",
        "mar2025": "Март 2025",
        "jun2025": "Июнь 2025",
        "beyond2025": "После 2025"
      }
    },
    "faq": {
      "title": "Часто задаваемые вопросы",
      "subtitle": "Найдите ответы на распространенные вопросы о BrainMessenger",
      "searchAlt": "Иконка поиска",
      "searchPlaceholder": "Искать вопросы...",
      "allQuestions": "Все вопросы",
      "noResults": "Вопросов по вашему запросу не найдено.",
      "categories": {
        "general": "Общие",
        "technical": "Технические",
        "security": "Безопасность",
        "pricing": "Цены",
        "generalProject": "Общие вопросы о проекте",
        "technicalQuestions": "Технические вопросы",
        "developmentProcesses": "Процессы разработки",
        "statusRoadmapFuture": "Статус, дорожная карта и будущее",
        "challengesOpportunitiesLimitations": "Вызовы, возможности и ограничения",
        "learnMoreContribute": "Узнать больше и внести вклад"
      },
      "questionsData": {
        "generalProject": {
          "q1": {
            "question": "В чем основная идея BrainMessenger? Что делает его особенным?",
            "answer": "BrainMessenger — это не просто очередной мессенджер. Наша главная идея — создать ЦИФРОВОЙ АКТИВ (Принцип 10), который упрощает сложное взаимодействие (принцип Маргулана Сейсембаева) и служит надежным инструментом для эффективной коммуникации. Мы сосредоточены на качестве (Принцип 3), безопасности (Принцип 5) и надежности (Принцип 3), а не просто на наборе функций. Мы строим СИСТЕМУ (Принцип 9), которая отражает наши принципы и постоянно улучшается."
          },
          "q2": {
            "question": "Какие ключевые принципы лежат в основе разработки BrainMessenger?",
            "answer": "Проект основан на наборе из 15 ключевых принципов (см. Мои ключевые принципы), вдохновленных Маргуланом Сейсембаевым и лучшими практиками IT-индустрии. Наиболее важные, влияющие на код и процессы: Непрерывное обучение (Принцип 1), Создание ценности (Принцип 2), Качество > Количество (Принцип 3), Система и оптимизация (Кайдзен, Принцип 9), Долгосрочное мышление (Принцип 8), Прагматизм и реализм (Принцип 12), Настойчивость (Принцип 13), Склонность к действию (Принцип 15). Мы стремимся, чтобы эти принципы пронизывали все аспекты проекта."
          },
          "q3": {
            "question": "Кто стоит за проектом? Это открытое сообщество или команда?",
            "answer": "В настоящее время проект находится на ранней стадии и активно разрабатывается одним человеком (вами), который является движущей силой и несет ответственность (Принцип 6) за его создание. В будущем планируется привлечение контрибьюторов и, возможно, формирование команды. Проект открыт для вкладов (см. CONTRIBUTING.md)."
          }
        },
        "technicalQuestions": {
          "q1": {
            "question": "Почему был выбран именно этот технологический стек (TypeScript, NestJS, React/RN, PostgreSQL/Neon, GraphQL, Kafka, Redis, Cloudflare R2 и др.)?",
            "answer": "Выбор стека основан на прагматизме (Принцип 12), долгосрочном мышлении (Принцип 8) и стремлении к качеству (Принцип 3) и масштабируемости (НФТ-14, НФТ-15).\n*   TypeScript: Повышает надежность и поддерживаемость кода за счет строгой типизации.\n*   NestJS: Предоставляет мощную модульную архитектуру для бэкенда, упрощая построение масштабируемых приложений.\n*   React/React Native/Next.js: Позволяют создавать UI для разных платформ из единой кодовой базы (кроссплатформенность) и обеспечивают хорошую производительность.\n*   PostgreSQL (Neon): Надежная, проверенная реляционная база данных с обширными возможностями масштабирования и оптимизации. Neon как управляемый сервис снижает операционные накладные расходы (Прагматизм).\n*   Prisma: Выбрана как надежный ORM, обеспечивающий типобезопасность и встроенную защиту от SQL-инъекций (Качество, Безопасность).\n*   GraphQL: Позволяет клиентам запрашивать только те данные, которые им действительно нужны, одним запросом, оптимизируя сетевое взаимодействие (особенно для мобильных клиентов) и уменьшая избыточность данных по сравнению с REST. GraphQL также упрощает получение связанных данных (решая проблемы N+1 с DataLoader).\n*   Kafka: Выбрана для надежной асинхронной обработки задач, что критически важно для масштабируемости и отказоустойчивости.\n*   Redis: Высокопроизводительное хранилище в памяти для кэширования, Rate Limiting и управления состоянием в реальном времени.\n*   Cloudflare R2: Объектное хранилище с очень выгодными условиями (без платы за исходящий трафик), идеально подходящее для хранения пользовательских файлов (Прагматизм, АКТИВ).\n\nЭтот стек позволяет заложить прочный технический фундамент (Принцип 8) для будущего развития."
          },
          "q2": {
            "question": "Почему на старте используется монолитная архитектура, а не сразу микросервисы?",
            "answer": "Использование монолитной архитектуры на старте (MVP) — это прагматичное и реалистичное решение (Принцип 12). Оно позволяет быстро разрабатывать и итерировать базовую функциональность, минимизируя сложность на раннем этапе, когда команда небольшая. Запуск MVP важнее, чем построение излишне сложной архитектуры. После завершения MVP и роста проекта планируется поэтапный переход к микросервисам (см. План миграции на микросервисы)."
          },
          "q3": {
            "question": "Какие подходы используются для обеспечения безопасности?",
            "answer": "Безопасность является фундаментальным аспектом (Принцип 5) и приоритетом (см. Руководство по безопасности).\n*   Шифрование данных при передаче (TLS 1.2+) и хранении (AES для конфиденциальных данных, шифрование в R2).\n*   Надежное хеширование паролей (bcrypt/argon2).\n*   Использование Prisma для предотвращения SQL-инъекций.\n*   Валидация всех входных данных на бэкенде.\n*   Двухфакторная аутентификация (2FA) по электронной почте.\n*   Rate Limiting для защиты от брутфорс и DDoS-атак.\n*   Регулярное сканирование на уязвимости.\n*   Хранение секретов в безопасных местах (Kubernetes Secrets)."
          },
          "q4": {
            "question": "Как реализована функциональность реального времени (обмен сообщениями)?",
            "answer": "Функциональность реального времени (обмен сообщениями) реализована с использованием WebSockets. Бэкенд (NestJS Gateway) управляет WebSocket-соединениями, и клиенты подписываются на события чата. Доставка сообщений происходит через WebSocket. Для масштабирования WebSockets в микросервисной архитектуре будет использоваться Redis Pub/Sub или Kafka."
          },
          "q5": {
            "question": "Почему используется GraphQL вместо REST API?",
            "answer": "GraphQL позволяет клиентам запрашивать только те данные, которые им действительно нужны, одним запросом. Это оптимизирует сетевое взаимодействие (особенно для мобильных клиентов) и уменьшает избыточность данных по сравнению с REST. GraphQL также упрощает получение связанных данных (решая проблемы N+1 с DataLoader)."
          },
          "q6": {
            "question": "Как осуществляется управление большими объемами данных и файлов?",
            "answer": "*   Структурированные данные (сообщения, пользователи, чаты): Хранятся в PostgreSQL (Neon). Для быстрого получения используются индексы и оптимизация запросов (Prisma). По мере роста планируется партиционирование таблиц и репликация базы данных.\n*   Неструктурированные данные (файлы, изображения): Хранятся в Cloudflare R2. Для оптимизации изображений перед загрузкой используется асинхронная обработка (Kafka). R2 выбран за масштабируемость и выгодные тарифы на трафик."
          }
        },
        "developmentProcesses": {
          "q1": {
            "question": "Каков подход к управлению проектом и задачами?",
            "answer": "Управление проектом осуществляется с использованием системы планирования (см. Моя система планирования 2025-2026) в Notion. Глобальные цели декомпозируются на этапы (Roadmap), используется еженедельное планирование и трекер задач. Важным элементом является Час Кайдзен (Принцип 9) для ежедневной рефлексии, анализа узких мест и поиска путей улучшения."
          },
          "q2": {
            "question": "Как обеспечивается качество кода?",
            "answer": "Качество кода обеспечивается системными подходами (Принцип 3, 9):\n*   Использование TypeScript со строгой типизацией.\n*   Соблюдение стандартов кодирования (ESLint, Prettier).\n*   Code review всех изменений.\n*   Автоматизированное тестирование на разных уровнях (Unit, Integration, E2E).\n*   Непрерывная интеграция (CI) для автоматической проверки кода и тестов при каждом коммите/PR."
          },
          "q3": {
            "question": "Какая стратегия тестирования используется?",
            "answer": "Используется многоуровневая стратегия тестирования (см. Руководство по тестированию), сочетающая ручное и автоматизированное тестирование: Unit, Integration, API, E2E, Load, Security, Regression. Тесты интегрированы в CI/CD. Фокус делается на проверке ключевых требований (ФТ, НФТ)."
          },
          "q4": {
            "question": "Как обрабатываются ошибки?",
            "answer": "Ошибки обрабатываются централизованно и единообразно на бэкенде (NestJS Exception Filters) и преобразуются в стандартный формат API-ответа с кодами (extensions.code). На фронтенде ошибки обрабатываются на основе этих кодов, отображая пользователю понятное сообщение и предлагая действие. Все ошибки тщательно логируются (Winston → ELK) и отправляются в Sentry для отслеживания и анализа (см. Спецификация ошибок, Руководство по мониторингу)."
          },
          "q5": {
            "question": "Как разворачивается проект?",
            "answer": "Развертывание автоматизировано через CI/CD пайплайн (GitHub Actions). Docker используется для контейнеризации, а Kubernetes — для оркестрации в облаке. Инфраструктура описывается как код (Terraform). Процесс включает автоматическую сборку, тестирование, публикацию образов и Rolling Updates в Kubernetes для развертывания без простоев (см. Руководство по развертыванию)."
          },
          "q6": {
            "question": "Как осуществляется мониторинг системы в продакшене?",
            "answer": "Система мониторинга — это глаза и уши проекта (Принцип 9, 5). Используются:\n*   Prometheus для сбора метрик производительности и ресурсов.\n*   Grafana для визуализации метрик и дашбордов.\n*   Sentry для отслеживания ошибок приложения (Frontend и Backend).\n*   ELK Stack (или Kibana с Winston) для централизованного логирования и анализа.\n*   Alertmanager для настройки автоматических оповещений о проблемах.\nЭти инструменты позволяют проактивно выявлять проблемы и проводить оптимизацию (см. Руководство по мониторингу)."
          }
        },
        "statusRoadmapFuture": {
          "q1": {
            "question": "Каков текущий статус проекта?",
            "answer": "Проект находится в стадии активной разработки Минимально Жизнеспособного Продукта (MVP). Заложен основной технологический фундамент, реализованы ключевые элементы UI и базовая безопасность. Идет работа над основной функциональностью обмена сообщениями, обработки файлов и создания групп/каналов. (См. Руководство по требованиям к проекту BrainMessenger (MVP))."
          },
          "q2": {
            "question": "Каковы следующие шаги после завершения MVP?",
            "answer": "После завершения MVP следующие шаги включают добавление расширенных функций (аудио/видеозвонки, Premium, расширенная безопасность, полный набор анимаций и локализация), дальнейшую оптимизацию производительности и подготовку к масштабированию. Детальный план представлен в Дорожной карте BrainMessenger (см. Дорожная карта)."
          },
          "q3": {
            "question": "Планируется ли переход на микросервисную архитектуру?",
            "answer": "Да, переход на микросервисы является частью долгосрочной стратегии развития (Принцип 8). Он планируется поэтапно, начиная с 1 квартала 2026 года, с использованием подхода Strangler Pattern. Это позволит масштабировать компоненты независимо, увеличивая отказоустойчивость и гибкость (см. План миграции на микросервисы)."
          }
        },
        "challengesOpportunitiesLimitations": {
          "q1": {
            "question": "Каковы основные технические проблемы (подводные камни) в проекте?",
            "answer": "*   Реализация надежной функциональности реального времени (WebSockets): Управление тысячами одновременных подключений, надежная доставка сообщений, управление статусами онлайн/офлайн.\n*   Масштабирование базы данных при больших объемах данных: Управление ростом таблицы сообщений (партиционирование), оптимизация сложных запросов.\n*   Обработка и доставка файлов: Эффективная загрузка, оптимизация изображений, безопасная загрузка из Cloudflare R2.\n*   Переход на микросервисы: Увеличение операционной сложности, настройка межсервисного взаимодействия (Kafka, GraphQL Federation), миграция данных.\n*   Поддержание высокого качества и производительности: Постоянная оптимизация на всех уровнях (бэкенд, фронтенд, инфраструктура) по мере роста нагрузки и функциональности."
          },
          "q2": {
            "question": "Какие возможности и преимущества дает архитектура и стек проекта?",
            "answer": "*   Высокая масштабируемость: Выбранные технологии (NestJS, Kubernetes, Kafka, Redis, Neon, R2) позволяют горизонтально масштабировать приложение для поддержки большого количества пользователей.\n*   Надежность и отказоустойчивость: Использование надежных сервисов, асинхронной обработки (Kafka), мониторинга и, в будущем, микросервисов повышает устойчивость системы к сбоям.\n*   Высокая производительность: GraphQL, кэширование, оптимизация запросов, асинхронная обработка способствуют быстрой работе приложения.\n*   Кроссплатформенность: React Native и Next.js позволяют создавать приложения для всех основных платформ из единой кодовой базы (для UI).\n*   Качество кода и поддерживаемость: TypeScript, NestJS, Prisma, стандарты кодирования, тестирование упрощают разработку и уменьшают количество дефектов.\n*   Экономичность (на старте): Использование бесплатных/доступных тарифов (Neon, R2) и проверенных решений с открытым исходным кодом.\n*   Богатая экосистема: Использование популярных технологий с большим сообществом и множеством готовых библиотек."
          },
          "q3": {
            "question": "Каковы ограничения проекта на текущем этапе (MVP)?"
            ,
            "answer": "*   Ограниченный набор функций по сравнению с видением (нет звонков, Premium, расширенной безопасности).\n*   Ограниченные возможности многоязычности и доступности (планируется расширение).\n*   Архитектура в настоящее время монолитна, что накладывает ограничения на независимое масштабирование отдельных частей.\n*   Возможны ограничения производительности при нагрузке, значительно превышающей целевую для MVP (~1000 одновременных пользователей), до внедрения глубоких оптимизаций и микросервисов."
          }
        },
        "learnMoreContribute": {
        "q1": {
          "question": "Где я могу получить более подробную информацию о проекте?",
          "answer": "Более подробную информацию можно найти в нашей документации (ссылка будет добавлена позже) и на странице проекта на GitHub (если проект открыт)."
        },
        "q2": {
          "question": "Как я могу присоединиться к разработке проекта или внести свой вклад?",
          "answer": "Мы всегда рады новым участникам! Свяжитесь с нами через контактную форму на сайте или через GitHub (если проект открыт), чтобы обговорить возможные варианты сотрудничества."
        },
        "q3": {
          "question": "Где я могу задать дополнительные вопросы?",
          "answer": "Дополнительные вопросы можно задать через контактную форму на сайте, в нашем комьюнити (ссылка будет добавлена) или создав issue на GitHub (если проект открыт)."
        }
      }
    },
    "docs": {
  "design": {
    "title": "Документация Дизайна BrainMessenger",
    "subtitle": "Система Качества и Ценности",
    "section1": {
      "title": "1. Введение: Дизайн как Фундамент Ценности",
      "name": "Система Дизайна BrainMessenger",
      "description": "Эта дизайн-система определяет визуальные и функциональные стандарты для интерфейса BrainMessenger. Наша цель — создать интерфейс, который не просто выглядит хорошо, но и является <strong>интуитивно понятным, эффективным и доступным</strong> (Принцип 2: Создание Ценности), опираясь на принципы <strong>качества > количества</strong> (Принцип 3) и <strong>прагматизма</strong> (Принцип 12) в выборе решений.",
      "goal": "Обеспечить <strong>единообразие, надежность и положительный пользовательский опыт</strong> на всех платформах (Windows, Android, веб), делая BrainMessenger <strong>полезным АКТИВОМ</strong> (Принцип 10) для пользователей.",
      "principles_title": "Принципы, которыми руководствуется дизайн:",
      "principles": [
        "<strong>Создание Ценности (Принцип 2):</strong> Дизайн должен быть функциональным и решать задачи пользователя максимально удобно и эффективно.",
        "<strong>Качество > Количество (Принцип 3):</strong> Фокус на отточенности ключевых элементов, а не на множестве непродуманных деталей. Дизайн должен быть <strong>надежным</strong> и <strong>продуманным</strong>.",
        "<strong>Прагматизм и Реализм (Принцип 12):</strong> Выбор дизайнерских решений, реализуемых с учетом технических ограничений (например, оптимизация анимаций).",
        "<strong>Целостность (Принцип 7):</strong> Визуальная и функциональная целостность на всех платформах.",
        "<strong>Здоровье как Фундамент (Принцип 5):</strong> Внимание к доступности (WCAG), чтобы дизайн не создавал излишнюю нагрузку (зрительную, когнитивную) на пользователя."
      ]
    },
    "section2": {
      "title": "2. Цветовая палитра: Визуальный язык BrainMessenger",
      "intro": "Цвета разделены для Light и Dark режимов, поддерживая переключение темы (\"Ночной режим\"). Все цвета заданы в HEX.",
      "light_mode_title": "2.1. Light Mode",
      "light_mode_table": [
        ["Категория", "Цвет (HEX)", "Назначение"],
        ["<strong>Primary Gradient</strong>", "`#A7F43A` → `#00C853`", "Основной градиент для акцентных элементов (кнопки \"Начать\", иконки)"],
        ["<strong>Accent</strong>", "`#FF6347`", "Акцентные элементы (ошибки, важные уведомления)"],
        ["<strong>Secondary</strong>", "`#00BFFF`", "Второстепенные кнопки, ссылки, интерактивные элементы"],
        ["<strong>Success</strong>", "`#96C93D`", "Подтверждения, успешные действия"],
        ["<strong>Background</strong>", "`#FFFFFF`", "Основной фон"],
        ["<strong>Surface</strong>", "`#F0F0F0`", "Карточки, панели, фоны сообщений"],
        ["<strong>Text Primary</strong>", "`#333333`", "Основной текст"],
        ["<strong>Text Secondary</strong>", "`#4D4D4D`", "Вторичный текст, подсказки, метаданные"],
        ["<strong>Disabled</strong>", "`#B0B0B0`", "Неактивные элементы"],
        ["<strong>Border</strong>", "`#E8E8D9`", "Границы, разделители"]
      ],
      "dark_mode_title": "2.2. Dark Mode",
      "dark_mode_table": [
        ["Категория", "Цвет (HEX)", "Назначение"],
        ["<strong>Primary Gradient</strong>", "`#F2F047` → `#1ED94F`", "Основной градиент для акцентных элементов"],
        ["<strong>Accent</strong>", "`#FF6347`", "Акцентные элементы (ошибки)"],
        ["<strong>Secondary</strong>", "`#00BFFF`", "Второстепенные кнопки, ссылки"],
        ["<strong>Success</strong>", "`#96C93D`", "Подтверждения, успешные действия"],
        ["<strong>Background</strong>", "`#1A1A1A`", "Основной фон"],
        ["<strong>Surface</strong>", "`#333333`", "Карточки, панели, фоны сообщений"],
        ["<strong>Text Primary</strong>", "`#FFFFFF`", "Основной текст"],
        ["<strong>Text Secondary</strong>", "`#D9E8D9`", "Вторичный текст, подсказки"],
        ["<strong>Disabled</strong>", "`#4D4D4D`", "Неактивные элементы"],
        ["<strong>Border</strong>", "`#B0B0B0`", "Границы, разделители"]
      ],
      "premium_colors_title": "2.3. Цвета Премиум-Функций (Визуальное выделение Ценности)",
      "premium_colors": [
        "<strong>Premium Accent:</strong> `#FFD600` (Золотой)",
        "<strong>Premium Secondary:</strong> `#2196F3` (Синий)",
        "Используются для визуального выделения премиум-функций (например, в анимациях нейронных связей, специальных элементах UI), подчеркивая их <strong>дополнительную ценность</strong> (Принцип 2, 10)."
      ],
      "color_application_title": "2.4. Применение Цветов (Примеры)",
      "color_application": [
        {
          "title": "Welcome Screen (из скриншота):",
          "items": [
            "Фон: `#1A1A1A` (Dark Mode).",
            "Кнопка \"Get Started\": Градиент `#F2F047` → `#1ED94F`.",
            "Иконка чата: `#F2F047` (обводка) с белым символом внутри.",
            "Текст: `#FFFFFF` (Welcome to Brain Messenger), `#D9E8D9` (подсказка)."
          ]
        },
        {
          "title": "Переключение темы:",
          "items": [
            "Реализовано через глобальный флаг `themeMode` (`Light`/`Dark`).",
            "Пример в React Native:\n```jsx\nimport { useColorScheme } from 'react-native'\nconst themeMode = useColorScheme() === 'dark' ? 'Dark' : 'Light'\nconst backgroundColor = themeMode === 'Dark' ? '#1A1A1A' : '#FFFFFF'; // Пример выбора фона\n```"
          ]
        }
      ],
      "usage_recommendations_title": "2.5. Рекомендации по Использованию Цветов",
      "usage_recommendations": [
        "<strong>Градиенты:</strong> Используйте `#A7F43A` → `#00C853` или `#F2F047` → `#1ED94F` (в зависимости от темы) для ключевых действий и акцентных элементов, привлекающих внимание к <strong>ценности</strong> (Принцип 2).",
        "<strong>Тёмная тема:</strong> Используйте `#1A1A1A` или `#212121` как основной фон для снижения нагрузки на глаза (связь с Принципом 5: Здоровье).",
        "<strong>Контраст:</strong> Всегда проверяйте контрастность текста и элементов для обеспечения <strong>доступности</strong> (WCAG 2.1 AA) и соответствия Принципу 7 (Целостность). Используйте инструменты вроде WebAIM Contrast Checker."
      ]
    },
    "section3": {
      "title": "3. Типографика: Читаемость как Основа Эффективности",
      "intro": "Выбор шрифта и его применение основаны на обеспечении максимальной читаемости и доступности, что критически важно для эффективного усвоения информации и снижения когнитивной нагрузки (связь с Принципом 5: Здоровье и Принципом 2: Ценность).",
      "primary_font_title": "3.1. Основной шрифт",
      "primary_font": [
        "<strong>Семейство:</strong> Roboto (Google Fonts)",
        "<strong>Запасной:</strong> Sans-serif",
        "<strong>Причина:</strong> Высокая читаемость на разных размерах экрана, широкая поддержка символов (мультиязычность), открытая лицензия и доступность."
      ],
      "sizes_styles_title": "3.2. Размеры и стили (Шкала для Иерархии)",
      "sizes_styles_table": [
        ["Уровень", "Размер", "Начертание", "Использование"],
        ["H1 (Заголовок)", "24px", "Bold", "Основные заголовки экранов (например, \"Чаты\")"],
        ["H2 (Подзаголовок)", "18px", "Medium", "Второстепенные заголовки, названия групп"],
        ["Body", "16px", "Regular", "Основной текст сообщений, список чатов"],
        ["Caption", "14px", "Regular", "Подписи под фото, время сообщений, мелкий текст"],
        ["Button", "16px", "Medium", "Текст кнопок действий"]
      ],
      "notes_title": "Примечания:",
      "notes": [
        "<strong>Высота строки (Line Height):</strong> Минимум 1.5 для основного текста для улучшения читаемости.",
        "<strong>Кастомизация (Принцип 2):</strong> Пользователь может выбрать альтернативный шрифт в настройках (например, Open Sans) для адаптации под свои предпочтения.",
        "<strong>Доступность:</strong> Соблюдение контраста и минимального размера шрифта для соответствия WCAG."
      ]
    },
    "section4": {
      "title": "4. Анимации: Оптимизация и Смысл (Принцип 12: Прагматизм)",
      "intro": "Анимации в BrainMessenger используются для улучшения пользовательского опыта, предоставления визуальной обратной связи и придания интерфейсу живости. Однако они должны быть <strong>прагматичными, оптимизированными</strong> (<2 ГБ RAM) и <strong>не создавать излишней нагрузки</strong> (связь с Принципом 5: Здоровье).",
      "principles_title": "4.1. Принципы Анимаций",
      "principles": [
        "<strong>Смысл:</strong> Каждая анимация должна иметь четкую цель – объяснить переход, привлечь внимание к важному, подтвердить действие.",
        "<strong>Плавность:</strong> Использование `ease-in-out` или `ease-out` для натурального движения.",
        "<strong>Оптимизация:</strong> Анимации не должны замедлять интерфейс или потреблять много ресурсов. Длительность подобрана для баланса между плавностью и скоростью.",
        "<strong>Доступность:</strong> Избегание слишком быстрых или мигающих анимаций, которые могут вызвать дискомфорт или приступы у чувствительных пользователей."
      ],
      "list_title": "4.2. Список Анимаций (Примеры)",
      "list_table": [
        ["Название", "Описание", "Триггер", "Параметры", "Связь с Принципами", "Цвета (Light/Dark)"],
        ["Переключение слайдов", "Сдвиг слайдов (Welcome Screen)", "Свайп/клик по стрелке", "0.3 сек, slide left/right", "P2 (Онбординг)", "#96C93D / #96C93D"],
        ["Открытие чата", "Чат появляется снизу вверх", "Клик по чату в списке", "0.3 сек, ease-in-out", "P2 (Навигация)", "#00BFFF / #00BFFF"],
        ["Нажатие кнопки", "Визуальный фидбек при клике (уменьшение)", "Клик по кнопке", "0.2 сек, scale", "P2 (Фидбек)", "Градиент #F2F047→#1ED94F"],
        ["Отправка сообщения", "Сообщение появляется с плавным появлением", "Клик \"Отправить\"", "0.3 сек, fade-in", "P2 (Фидбек)", "#96C93D / #96C93D"],
        ["Переход между экранами", "Сдвиг экрана вправо/влево (базовая навигация)", "Навигация", "0.3 сек, slide", "P2 (Навигация)", "#B0B0B0 / #4D4D4D"],
        ["Анимация иконок (Morph)", "Превращение иконки (например, mute → unmute)", "Клик (переключение состояния)", "0.4 сек, morph", "P2 (Состояние)", "#FF6347 / #FF6347"],
        ["Волны при нажатии (Ripple)", "Радиальные волны от точки нажатия (фидбек)", "Клик по кнопке/элементу", "0.3 сек, ripple", "P2 (Фидбек)", "#F2F047 / #F2F047"],
        ["Глитч-эффект (Premium)", "Искажение текста для премиум (визуализация)", "Активация подписки", "0.2 сек, glitch", "P2, P10 (Выделение)", "#FF6347 / #FF6347"],
        ["Нейронные связи (Premium)", "Пульсирующие линии (визуализация Актива)", "Премиум-экран", "0.5 сек, pulse", "P2, P10 (Выделение)", "#96C93D / #96C93D"]
      ],
      "implementation_examples_title": "4.3. Примеры Реализации (Фрагменты кода)",
      "css_ripple_title": "CSS для Ripple-эффекта:",
      "css_ripple_code": ".ripple {\n  background: linear-gradient(45deg, #F2F047, #1ED94F); /* Или другие цвета/градиент */\n  border-radius: 50%;\n  animation: ripple 0.3s ease-out;\n}\n@keyframes ripple {\n  to { transform: scale(2); opacity: 0; }\n}",
      "rn_icon_title": "React Native для анимированной иконки:",
      "rn_icon_code": "import Animated from 'react-native-reanimated'; // Пример библиотеки\nimport Icon from 'react-native-vector-icons/MaterialIcons'; // Пример библиотеки\n\nconst color = themeMode === 'Dark' ? '#FFFFFF' : '#333333';\n// Создание анимированного компонента Icon\nconst AnimatedIcon = Animated.createAnimatedComponent(Icon);\n\n// Пример использования с анимацией scale (предполагая, что 'scale' - это Animated.Value)\n<AnimatedIcon name=\"volume-up\" color={color} style={{ transform: [{ scale: scale }] }} />"
    },
    "section5": {
      "title": "5. Выравнивание и Сетка: Структура и Порядок (Принцип 9: Система)",
      "intro": "Использование последовательной системы выравнивания и модульной сетки — это основа для создания <strong>системного, легко поддерживаемого и визуально гармоничного</strong> интерфейса (Принцип 9: Система).",
      "base_grid": "<strong>Базовая Сетка:</strong> 8px (базовый шаг для определения размеров элементов, отступов, интервалов). Все значения должны быть кратны 8 (или 4 для очень мелких элементов).",
      "alignment_title": "<strong>Выравнивание:</strong>",
      "alignment": [
        "Используется принцип <strong>визуальной иерархии</strong>: более важные элементы располагаются выше или визуально доминируют.",
        "<strong>Вертикальный поток:</strong> Контент на экранах организуется сверху вниз: Заголовок → Поле ввода → Кнопка действия.",
        "<strong>Горизонтальное выравнивание:</strong> Элементы в контейнерах выравниваются по левому краю (для LTR) или правому краю (для RTL), если нет необходимости в центрировании (например, заголовки в шапке).",
        "<strong>Отступы (Padding/Margin):</strong> Используются значения из шкалы, кратной 8px (8, 16, 24, 32, 40, 48 px и т.д.) для создания четких интервалов между элементами и группами элементов."
      ],
      "adaptability_title": "<strong>Адаптивность и Респонсивность:</strong>",
      "adaptability": [
        "Дизайн адаптируется под разные размеры экрана для обеспечения <strong>ценности</strong> (Принцип 2) на любом устройстве.",
        "<strong>Мобильные устройства:</strong> 320px–767px (Обычно одноколоночный макет).",
        "<strong>Планшеты:</strong> 768px–1023px (Возможно, двухколоночный макет, боковые панели).",
        "<strong>Десктоп:</strong> 1024px+ (Широкий макет, многоколоночный дизайн, боковые панели)."
      ]
    },
    "section6": {
      "title": "6. Принципы Доступности (WCAG 2.1 AA): Дизайн для Всех (Принцип 5: Здоровье, Принцип 7: Целостность)",
      "intro": "<strong>Доступность — это не опция, а фундаментальное требование</strong> (схоже с Принципом 5: Здоровье как Фундамент) для создания <strong>целостного</strong> (Принцип 7) и <strong>ценного</strong> (Принцип 2) продукта, которым могут пользоваться все, независимо от их способностей или используемых технологий. Мы стремимся соответствовать уровню WCAG 2.1 AA.",
      "principles": [
        "<strong>Контрастность Цветов:</strong> Текстовые элементы должны иметь минимальный контраст 4.5:1 (для обычного текста) и 3:1 (для крупного текста или иконок) по отношению к фону. Это проверяется для обеих тем (Light/Dark).",
        "<strong>Навигация с Клавиатуры:</strong> Все интерактивные элементы (кнопки, ссылки, поля ввода) должны быть доступны для навигации с помощью клавиатуры (Tab, Shift+Tab) и активации (Enter, Space).",
        "<strong>Поддержка Экранных Читалок (Screen Readers):</strong> Использование семантической разметки (HTML) и ARIA-атрибутов для предоставления контекста и информации пользователям экранных читалок (например, описания для иконок, состояния элементов).",
        "<strong>Визуальный Индикатор Фокуса:</strong> Для пользователей клавиатуры должен быть четкий и видимый индикатор текущего сфокусированного элемента (наприклад, синя обводка `#007BFF`).",
        "<strong>Обработка Ошибок:</strong> Сообщения об ошибках должны быть четкими, понятными и легко определяемыми пользователями, включая пользователей экранных читалок.",
        "<strong>Поддержка RTL (Справа Налево):</strong> Дизайн адаптируется для языков с направлением письма справа налево (например, арабский), включая зеркальное отображение макета, иконок и текста (см. DocLocIn.md)."
      ]
    },
    "section7": {
      "title": "7. Примечания и Рекомендации",
      "notes": [
        "<strong>Кастомизация Пользователем:</strong> Помните, что некоторые аспекты дизайна (цвета чатов, шрифты) пользователь может менять в настройках. Дизайн системы должен учитывать эту гибкость.",
        "<strong>Тестирование на Реальных Пристройствах:</strong> Все компоненты дизайна необходимо тестировать на разнообразных устройствах, с разными разрешениями экрана и в разных условиях освещения, чтобы убедиться в их эффективности и доступности.",
        "<strong>Живая Документация:</strong> Эта дизайн-система — живой документ. Она будет дополняться новыми компонентами, шаблонами и рекомендациями по мере развития продукта, отражая принципы <strong>непрерывного совершенствования</strong> (Принцип 1) и <strong>системного подхода</strong> (Принцип 9).",
        "<strong>Дизайн как часть Процесса Кайдзен:</strong> Дизайн-решения анализируются и улучшаются на основе обратной связи и реального использования, интегрируясь в общий процесс Кайдзен (Принцип 9, 14)."
      ]
    }
  }
},
    "footer": {
      "sectionTitle": {
        "brand": "BrainMessenger"
      },
      "brandContent": "Ваша Умная Платформа для Общения",
      "copyright": "© 2025 BrainMessenger. Все права защищены."
    }
  }
}