{
  "header": {
      "features": "Функции",
      "news": "Новости",
      "faq": "FAQ",
      "faqLink": "Часто задаваемые вопросы",
      "docs": "Документация",
      "updates": "Обновления",
      "selectLanguage": "Выбрать язык",
      "changeLanguageTooltip": "Сменить язык",
      "lightMode": "Светлая тема",
      "darkMode": "Темная тема",
      "openMenu": "Открыть меню",
      "closeMenu": "Закрыть меню",
      "settings": "Настройки",
      "signOut": "Выйти",
      "deleteAccount": "Удалить аккаунт",
      "deleteAccountConfirmTitle": "Подтвердите удаление аккаунта",
      "deleteAccountConfirmMessage": "Вы уверены, что хотите удалить свой аккаунт? Это действие необратимо.",
      "cancel": "Отмена",
      "confirmDelete": "Подтвердить удаление",
      "signIn": "Войти"
    },
    "common": {
      "backToHome": "Назад на главную"
    },
    "hero": {
      "title": "Добро пожаловать в BrainMessenger",
      "subtitle": "Ваша интеллектуальная платформа для общения",
      "getStarted": "Начать",
      "learnMore": "Узнать больше",
      "connectSmarterTitle": "Общайтесь умнее с BrainMessenger",
      "connectSmarterSubtitle": "Откройте для себя новое поколение обмена сообщениями с расширенными функциями, непревзойденной безопасностью и бесперебойной связью на всех ваших устройствах.",
      "downloadButton": "Скачать",
      "downloadAndroid": "Скачать для Android"
    },
    "features": {
      "featuresTitle": "Ключевые функции",
      "featuresSubtitle": "Узнайте, что делает нас уникальными",
      "secureMessaging": "Безопасные сообщения",
      "secureMessagingDesc": "Сквозное шифрование для вашей конфиденциальности",
      "smartAssistant": "Умный помощник",
      "smartAssistantDesc": "Помощь на базе ИИ всегда под рукой",
      "crossPlatform": "Кроссплатформенность",
      "crossPlatformDesc": "Используйте на любом устройстве, где угодно",
      "groupChats": "Групповые чаты",
      "groupChatsDesc": "Общайтесь с несколькими людьми одновременно",
      "privacyFirst": "Конфиденциальность прежде всего",
      "privacyFirstDesc": "Ваши данные принадлежат вам, всегда"
    },
    "news": {
      "latestNews": "Последние новости",
      "readMore": "Читать далее",
      "previousButton": "Предыдущая новость",
      "nextButton": "Следующая новость",
      "pauseAutoplay": "Приостановить автовоспроизведение",
      "playAutoplay": "Воспроизвести автовоспроизведение"
    },
    "updates": {
      "item1": {
        "title": "Заголовок обновления 1",
        "description": "Описание обновления 1"
      },
      "item2": {
        "title": "Заголовок обновления 2",
        "description": "Описание обновления 2"
      },
      "item3": {
        "title": "Заголовок обновления 3",
        "description": "Описание обновления 3"
      },
      "item4": {
        "title": "Заголовок обновления 4",
        "description": "Описание обновления 4"
      },
      "item5": {
        "title": "Заголовок обновления 5",
        "description": "Описание обновления 5"
      }
    },
    "roadmap": {
      "title": {
        "section": "Дорожная карта",
        "phase0": "0. Лендинг-Сайт: Запуск и Базовая Оптимизация",
        "phase1": "1. Фундамент и Стек",
        "phase2": "2. Core MVP Функции",
        "mobileEnhancement": "Улучшение мобильной версии",
        "aiIntegration": "Интеграция ИИ",
        "globalExpansion": "Глобальное расширение",
        "enterpriseSolutions": "Корпоративные решения",
        "futureInnovation": "Будущие инновации"
      },
      "subtitle": {
        "section": "Наше видение будущего"
      },
      "status": {
        "completed": "Завершено",
        "inProgress": "В процессе",
        "upcoming": "Предстоящие"
      },
      "description": {
        "phase0": "Цель этапа: Публикация минимально жизнеспособного лендинг-сайта (MVP) на brain-messenger.com,  обеспечивающего базовую информацию о проекте и каналы перехода на  веб-приложение, с устранением критических визуальных недочетов  (текстовые ключи).",
        "phase1": "Усиление протоколов и функций безопасности.",
        "phase2": "Этап \"Core MVP Функции\" — это фундаментальный шаг в разработке  BrainMessenger, направленный на создание минимально жизнеспособного  продукта (MVP), который позволит продемонстрировать ключевую ценность  цифрового актива потенциальным пользователям и инвесторам. Реализация  этого этапа критически важна для запуска первых пользовательских  сценариев, сбора обратной связи и последующего масштабирования продукта.",
        "mobileEnhancement": "Улучшение опыта использования мобильного приложения.",
        "aiIntegration": "Интеграция функций на базе ИИ для более умного общения.",
        "globalExpansion": "Расширение охвата BrainMessenger по всему миру.",
        "enterpriseSolutions": "Разработка решений для корпоративных клиентов.",
        "futureInnovation": "Исследование и внедрение будущих технологий."
      },
      "features": {
        "secureMessagingInfrastructure": "Инфраструктура безопасного обмена сообщениями",
        "crossPlatformCompatibility": "Кроссплатформенная совместимость",
        "basicUserInterface": "Базовый пользовательский интерфейс",
        "endToEndEncryption": "Сквозное шифрование",
        "twoFactorAuthentication": "Двухфакторная аутентификация",
        "fileSharingCapabilities": "Возможности обмена файлами",
        "teamWorkspaces": "Командные рабочие пространства",
        "realTimeCollaboration": "Сотрудничество в реальном времени",
        "advancedFileSharing": "Расширенный обмен файлами",
        "nativeMobileApps": "Нативные мобильные приложения",
        "offlineFunctionality": "Офлайн-функциональность",
        "pushNotifications": "Push-уведомления",
        "smartMessageCategorization": "Умная категоризация сообщений",
        "automatedResponses": "Автоматические ответы",
        "contentAnalysis": "Анализ контента",
        "multiLanguageSupport": "Многоязычная поддержка",
        "regionalDataCenters": "Региональные центры обработки данных",
        "culturalAdaptations": "Культурные адаптации",
        "advancedAdminControls": "Расширенные элементы управления администратора",
        "customIntegrations": "Пользовательские интеграции",
        "enterpriseSupport": "Корпоративная поддержка",
        "emergingTechnologies": "Новейшие технологии",
        "communityDrivenFeatures": "Функции, разработанные сообществом",
        "platformExpansion": "Расширение платформы"
      },
      "date": {
        "dec2024": "Декабрь 2024",
        "jun2025": "Июнь 2025",
        "july2025": "Июль 2025",
        "beyond2025": "После 2025"
      }
    },
  "faq": {
      "title": "Часто задаваемые вопросы",
      "subtitle": "Найдите ответы на распространенные вопросы о BrainMessenger",
      "searchAlt": "Иконка поиска",
      "searchPlaceholder": "Искать вопросы...",
      "allQuestions": "Все вопросы",
      "noResults": "Вопросов по вашему запросу не найдено.",
      "categories": {
        "general": "Общие",
        "technical": "Технические",
        "security": "Безопасность",
        "pricing": "Цены",
        "generalProject": "Общие вопросы по проекту",
        "technicalQuestions": "Технические вопросы",
        "developmentProcesses": "Процессы разработки",
        "statusRoadmapFuture": "Статус, дорожная карта и будущее",
        "challengesOpportunitiesLimitations": "Вызовы, возможности и ограничения",
        "learnMoreContribute": "Узнать больше и внести вклад"
      },
      "questionsData": {
        "generalProject": {
          "q1": {
            "question": "Какова основная идея BrainMessenger? Что делает его особенным?",
            "answer": "BrainMessenger — это не просто очередной мессенджер. Наша основная идея — создать Цифровой АКТИВ (Принцип 10), который упрощает сложное взаимодействие (принцип Маргулана Сейсембаева) и служит надежным инструментом для эффективной коммуникации. Мы сосредоточены на качестве (Принцип 3), безопасности (Принцип 5) и надежности (Принцип 3), а не просто на наборе функций. Мы строим СИСТЕМУ (Принцип 9), которая отражает наши принципы и постоянно улучшается."
          },
          "q2": {
            "question": "Какие ключевые принципы лежат в основе разработки BrainMessenger?",
            "answer": "Проект базируется на наборе из 15 ключевых принципов (см. Мои ключевые принципы), вдохновленных Маргуланом Сейсембаевым и лучшими практиками IT-индустрии. Самые важные, влияющие на код и процессы: Непрерывное обучение (Принцип 1), Создание ценности (Принцип 2), Качество > Количество (Принцип 3), Система и оптимизация (Кайдзен, Принцип 9), Долгосрочное мышление (Принцип 8), Прагматизм и реализм (Принцип 12), Настойчивость (Принцип 13), Склонность к действию (Принцип 15). Мы стремимся, чтобы эти принципы пронизывали все аспекты проекта."
          },
          "q3": {
            "question": "Кто стоит за проектом? Это открытое сообщество или команда?",
            "answer": "На данный момент проект находится на ранней стадии и активно разрабатывается одним человеком (вами), который является движущей силой и несет ответственность (Принцип 6) за его создание. В будущем планируется привлечение контрибьюторов и, возможно, формирование команды. Проект открыт для вкладов (см. CONTRIBUTING.md)."
          }
        },
        "technicalQuestions": {
          "q1": {
            "question": "Почему был выбран именно этот технологический стек (TypeScript, NestJS, React/RN, PostgreSQL/Neon, GraphQL, Kafka, Redis, Cloudflare R2 и т.д.)?",
            "answer": "Выбор стека основан на прагматизме (Принцип 12), долгосрочном мышлении (Принцип 8) и стремлении к качеству (Принцип 3) и масштабируемости (НФТ-14, НФТ-15).\n*   TypeScript: Увеличивает надежность и поддерживаемость кода благодаря строгой типизации.\n*   NestJS: Предоставляет мощную, модульную архитектуру для бэкенда, упрощая создание масштабируемых приложений.\n*   React/React Native/Next.js: Позволяют создавать UI для разных платформ из единой кодовой базы (кросс-платформенность) и обеспечивают хорошую производительность.\n*   PostgreSQL (Neon): Надежная, проверенная реляционная база данных с широкими возможностями масштабирования и оптимизации. Neon как управляемый сервис уменьшает операционные расходы (Прагматизм).\n*   Prisma: Выбран как надежный ORM, обеспечивающий типобезопасность и встроенную защиту от SQL-инъекций (Качество, Безопасность).\n*   GraphQL: Позволяет клиентам запрашивать только те данные, которые им действительно нужны, одним запросом, оптимизируя сетевое взаимодействие (особенно для мобильных клиентов) и уменьшая избыточность данных по сравнению с REST. GraphQL также упрощает получение связанных данных (решая N+1 проблемы с DataLoader).\n*   Kafka: Выбран для надежной асинхронной обработки задач, что критически важно для масштабируемости и отказоустойчивости.\n*   Redis: Высокопроизводительное In-memory хранилище для кэширования, Rate Limiting и управления состоянием в реальном времени.\n*   Cloudflare R2: Объектное хранилище с очень выгодными условиями (без платы за исходящий трафик), идеально подходит для хранения файлов пользователей (Прагматизм, АКТИВ).\n\nЭтот стек позволяет заложить прочную техническую основу (Принцип 8) для будущего развития."
          },
          "q2": {
            "question": "Почему на старте используется монолитная архитектура, а не сразу микросервисы?",
            "answer": "Использование монолитной архитектуры на старте (MVP) — это прагматичное и реалистичное решение (Принцип 12). Оно позволяет быстро разрабатывать и итерировать базовый функционал, минимизируя сложность на ранней стадии, когда команда невелика. Запуск MVP важнее, чем построение излишне сложной архитектуры. После завершения MVP и роста проекта планируется поэтапный переход к микросервисам (см. План миграции на микросервисы)."
          },
          "q3": {
            "question": "Какие подходы используются для обеспечения безопасности?",
            "answer": "Безопасность является фундаментальным аспектом (Принцип 5) и приоритетом (см. Руководство по безопасности).\n*   Шифрование данных при передаче (TLS 1.2+) и в состоянии покоя (AES для чувствительных данных, шифрование в R2).\n*   Надежное хеширование паролей (bcrypt/argon2).\n*   Использование Prisma для предотвращения SQL-инъекций.\n*   Валидация всех входящих данных на бэкенде.\n*   Двухфакторная аутентификация (2FA) через электронную почту.\n*   Ограничение скорости запросов (Rate Limiting) для защиты от брутфорс- и DDoS-атак.\n*   Регулярное сканирование на уязвимости.\n*   Хранение секретов в защищенных местах (Kubernetes Secrets)."
          },
          "q4": {
            "question": "Как реализована функциональность реального времени (обмен сообщениями)?",
            "answer": "Функциональность реального времени (обмен сообщениями) реализована с использованием WebSockets. Бэкенд (NestJS Gateway) управляет WebSocket-соединениями, а клиенты подписываются на события чата. Доставка сообщений происходит через WebSocket. Для масштабирования WebSockets в микросервисной архитектуре будет использоваться Redis Pub/Sub или Kafka."
          },
          "q5": {
            "question": "Почему используется GraphQL вместо REST API?",
            "answer": "GraphQL позволяет клиентам запрашивать только те данные, которые им действительно нужны, одним запросом. Это оптимизирует сетевое взаимодействие (особенно для мобильных клиентов) и уменьшает избыточность данных по сравнению с REST. GraphQL также упрощает получение связанных данных (решая N+1 проблемы с DataLoader)."
          },
          "q6": {
            "question": "Как управляются большие объемы данных и файлов?",
            "answer": "*   Структурированные данные (сообщения, пользователи, чаты): Хранятся в PostgreSQL (Neon). Для быстрого получения используются индексы и оптимизация запросов (Prisma). По мере роста планируется партиционирование таблиц и репликация базы данных.\n*   Неструктурированные данные (файлы, изображения): Хранятся в Cloudflare R2. Для оптимизации изображений перед загрузкой используется асинхронная обработка (Kafka). R2 выбран из-за масштабируемости и выгодных тарифов на трафик."
          }
        },
        "developmentProcesses": {
          "q1": {
            "question": "Какой подход используется к управлению проектом и задачами?",
            "answer": "Управление проектом ведется с помощью системы планирования (см. Моя система планирования 2025-2026) в Notion. Используется декомпозиция глобальных целей на этапы (Roadmap), недельное планирование и трекер задач. Важным элементом является Час Кайдзен (Принцип 9) для ежедневной рефлексии, анализа узких мест и поиска путей улучшения."
          },
          "q2": {
            "question": "Как обеспечивается качество кода?",
            "answer": "Качество кода обеспечивается системными подходами (Принцип 3, 9):\n*   Использование TypeScript со строгой типизацией.\n*   Соблюдение стандартов кодирования (ESLint, Prettier).\n*   Code review всех изменений.\n*   Автоматизированное тестирование на разных уровнях (Unit, Integration, E2E).\n*   Непрерывная интеграция (CI) для автоматической проверки кода и тестов при каждом коммите/PR."
          },
          "q3": {
            "question": "Какая стратегия тестирования используется?",
            "answer": "Используется многоуровневая стратегия тестирования (см. Руководство по тестированию), сочетающая ручное и автоматизированное тестирование: Unit, Integration, API, E2E, Load, Security, Regression. Тесты интегрированы в CI/CD. Фокус делается на проверке ключевых требований (ФТ, НФТ)."
          },
          "q4": {
            "question": "Как обрабатываются ошибки?",
            "answer": "Ошибки обрабатываются централизованно и унифицированно на бэкенде (NestJS Exception Filters) и преобразуются в стандартный формат ответа API с кодами (extensions.code). На фронтенде ошибки обрабатываются на основе этих кодов, отображая пользователю понятное сообщение и предлагая действие. Все ошибки тщательно логируются (Winston → ELK) и отправляются в Sentry для отслеживания и анализа (см. Спецификация ошибок, Руководство по мониторингу)."
          },
          "q5": {
            "question": "Как происходит развертывание проекта?",
            "answer": "Развертывание автоматизировано через CI/CD пайплайн (GitHub Actions). Для контейнеризации используется Docker, а для оркестрации в облаке — Kubernetes. Инфраструктура описана как код (Terraform). Процесс включает автоматическую сборку, тестирование, публикацию образов и Rolling Updates в Kubernetes для развертывания без простоя (см. Руководство по развертыванию)."
          },
          "q6": {
            "question": "Как система мониторится в продакшене?",
            "answer": "Система мониторинга — это глаза и уши проекта (Принцип 9, 5). Используются:\n*   Prometheus для сбора метрик производительности и ресурсов.\n*   Grafana для визуализации метрик и дашбордов.\n*   Sentry для отслеживания ошибок приложений (фронтенд и бэкенд).\n*   ELK Stack (или Kibana с Winston) для централизованного логирования и анализа.\n*   Alertmanager для настройки автоматических оповещений о проблемах.\nЭти инструменты позволяют заблаговременно выявлять проблемы и проводить оптимизацию (см. Руководство по мониторингу)."
          }
        },
        "statusRoadmapFuture": {
          "q1": {
            "question": "Каков текущий статус проекта?",
            "answer": "Проект находится в активной фазе разработки Минимально жизнеспособного продукта (MVP). Заложен основной технологический фундамент, реализованы ключевые элементы UI и базовая безопасность. В процессе реализации находится основной функционал обмена сообщениями, работы с файлами и создания групп/каналов. (См. Руководство по требованиям к проекту BrainMessenger (MVP))."
          },
          "q2": {
            "question": "Какие следующие шаги после завершения MVP?",
            "answer": "После завершения MVP следующие шаги включают добавление расширенных функций (аудио/видеозвонки, Премиум, расширенная безопасность, полный набор анимаций и локализации), дальнейшую оптимизацию производительности и подготовку к масштабированию. Детальный план представлен в Дорожной карте BrainMessenger (см. Roadmap)."
          },
          "q3": {
            "question": "Планируется ли переход на микросервисную архитектуру?",
            "answer": "Да, переход на микросервисы является частью долгосрочной стратегии развития (Принцип 8). Он планируется поэтапно, начиная с 1 квартала 2026 года, с использованием подхода Strangler Pattern. Это позволит независимо масштабировать компоненты, повышая отказоустойчивость и гибкость (см. План миграции на микросервисы)."
          }
        },
        "challengesOpportunitiesLimitations": {
          "q1": {
            "question": "Какие основные технические вызовы (подводные камни) в проекте?",
            "answer": "*   Реализация надежной функциональности реального времени (WebSockets): Управление тысячами одновременных подключений, надежная доставка сообщений, управление статусом онлайн/оффлайн.\n*   Масштабирование базы данных при больших объемах данных: Управление ростом таблицы сообщений (партиционирование), оптимизация сложных запросов.\n*   Обработка и доставка файлов: Эффективная загрузка, оптимизация изображений, безопасная загрузка с Cloudflare R2.\n*   Переход к микросервисам: Увеличение операционной сложности, настройка межсервисной коммуникации (Kafka, GraphQL Federation), миграция данных.\n*   Поддержка высокого качества и производительности: Непрерывная оптимизация на всех уровнях (бэкенд, фронтенд, инфраструктура) по мере роста нагрузки и функционала."
          },
          "q2": {
            "question": "Какие возможности и преимущества предоставляет архитектура и стек проекта?",
            "answer": "*   Высокая масштабируемость: Выбранные технологии (NestJS, Kubernetes, Kafka, Redis, Neon, R2) позволяют горизонтально масштабировать приложение для поддержки большого количества пользователей.\n*   Надежность и отказоустойчивость: Использование надежных сервисов, асинхронная обработка (Kafka), мониторинг и, в будущем, микросервисы повышают устойчивость системы к сбоям.\n*   Высокая производительность: GraphQL, кэширование, оптимизация запросов, асинхронная обработка способствуют быстрой работе приложения.\n*   Кросс-платформенность: React Native и Next.js позволяют создавать приложения для всех основных платформ из единой кодовой базы (для UI).\n*   Качество кода и поддерживаемость: TypeScript, NestJS, Prisma, стандарты кодирования, тестирование упрощают разработку и уменьшают количество дефектов.\n*   Экономическая эффективность (на старте): Использование бесплатных/доступных тарифов (Neon, R2) и проверенных решений с открытым исходным кодом.\n*   Богатая экосистема: Использование популярных технологий с большим сообществом и множеством готовых библиотек."
          },
          "q3": {
            "question": "Какие ограничения проекта на текущем этапе (MVP)?",
            "answer": "*   Ограниченный набор функций по сравнению с видением (нет звонков, Премиум, усиленной безопасности).\n*   Ограниченные возможности многоязычности и доступности (планируется расширение).\n*   Архитектура в настоящее время монолитная, что накладывает ограничения на независимое масштабирование отдельных частей.\n*   Могут быть ограничения по производительности при нагрузке, значительно превышающей целевую для MVP (~1000 одновременных пользователей), до внедрения глубоких оптимизаций и микросервисов."
          }
        },
        "learnMoreContribute": {
          "q1": {
            "question": "Где я могу получить более детальную информацию о проекте?",
            "answer": "Более детальную информацию можно найти в нашей документации (ссылка будет добавлена позже) и на странице проекта на GitHub (если проект открыт)."
          },
          "q2": {
            "question": "Как я могу присоединиться к разработке проекта или внести свой вклад?",
            "answer": "Мы всегда рады новым участникам! Свяжитесь с нами через контактную форму на сайте или через GitHub (если проект открыт), чтобы обсудить возможные варианты сотрудничества."
          },
          "q3": {
            "question": "Где я могу задать дополнительные вопросы?",
            "answer": "Дополнительные вопросы можно задать через контактную форму на сайте, в нашем комьюнити (ссылка будет добавлена) или создав issue на GitHub (если проект открыт)."
          }
        }
      },
      "docs": {
        "general": {
        "title": "Общая Документация BrainMessenger",
        "subtitle": "Введение и Основные Принципы",
        "section1": {
          "title": "1. Введение: Построение Системы Ценности",
          "content": "Добро пожаловать в репозиторий BrainMessenger. Это не просто очередной мессенджер. Это целенаправленный проект, направленный на создание <strong>надежной, масштабируемой и безопасной СИСТЕМЫ</strong> (Принцип 9), которая станет <strong>ключевым цифровым АКТИВОМ</strong> (Принцип 10) для каждого пользователя. Наша главная цель — <strong>упростить сложность</strong> (принцип Маргулана Сейсембаева), предоставляя интуитивно понятные и мощные инструменты для эффективной коммуникации и взаимодействия в современном цифровом мире.\n\nBrainMessenger построен на <strong>прочном фундаменте</strong> (Принцип 8) глубоких принципов, осознанного планирования и <strong>непрерывного обучения</strong> (Принцип 1). Каждая строка кода, каждое принятое решение — это <strong>долгосрочная инвестиция</strong> (Принцип 8) в <strong>качество</strong> (Принцип 3) и <strong>ценность</strong> (Принцип 2) нашего продукта."
        },
        "section2": {
          "title": "2. Видение и Миссия: Наш Долгосрочный Взгляд",
          "vision_title": "Наше Видение:",
          "vision_content": "Создать ведущий цифровой актив для коммуникации, который поможет миллионам пользователей по всему миру эффективно обмениваться информацией, строить сообщества и достигать своих целей.",
          "mission_title": "Наша Миссия:",
          "mission_content": "Упростить сложное взаимодействие, предоставляя надежный, безопасный и удобный мессенджер, построенный на принципах качества, прозрачности и непрерывного совершенствования."
        },
        "section3": {
          "title": "3. Ключевые Принципы: Фундамент Нашей Системы",
          "intro": "Наши действия и решения руководствуются набором ключевых принципов, которые служат <strong>фундаментом</strong> (Принцип 8) всего проекта BrainMessenger. Это не просто слова, а <strong>личные алгоритмы и стандарты (Кайдзен, Принцип 9)</strong>, выработанные через опыт и рефлексию (Принцип 1):",
          "principles": [
            "<strong>Непрерывное Обучение и Рост (Принцип 1):</strong> Процесс создания BrainMessenger — это полигон для глубокого изучения технологий, архитектуры и психологии пользователя. Мы учимся на каждом шагу, превращая ошибки в уроки.",
            "<strong>Создание Ценности (Принцип 2):</strong> В основе всего — польза для пользователя. Мы строим то, что действительно решает проблемы и делает жизнь лучше.",
            "<strong>Качество > Количество (Принцип 3):</strong> Фокус на отточенности ключевых элементов, а не на множестве непродуманных деталей. Дизайн должен быть <strong>надежным</strong> и <strong>продуманным</strong>.",
            "<strong>Осознанность и Присутствие (Принцип 4):</strong> Внимательное отношение к процессу, пользователям и команде.",
            "<strong>Здоровье как Фундамент (Принцип 5):</strong> Физическое и ментальное благополучие команды (и будущих пользователей) — основа продуктивности и устойчивости.",
            "<strong>Ответственность и Проактивность (Принцип 6):</strong> Мы берем на себя ответственность за результат и действуем на опережение.",
            "<strong>Целостность (Принцип 7):</strong> Наши слова соответствуют нашим действиям.",
            "<strong>Долгосрочное Мышление (Принцип 8):</strong> Мы инвестируем время и усилия с прицелом на будущее.",
            "<strong>Система и Оптимизация (Принцип 9):</strong> Мы строим процессы и архитектуру как систему, постоянно ища пути повышения эффективности (Кайдзен).",
            "<strong>Создание Богатства > Зарабатывание Денег (Принцип 10):</strong> Фокус на создании АКТИВА (BrainMessenger), который приносит ценность и работает вдолгую.",
            "<strong>Гибкость и Адаптивность (Принцип 11):</strong> Готовность изменять тактику и инструменты, сохраняя при этом видение.",
            "<strong>Прагматизм и Реализм (Принцип 12):</strong> Принятие решений на основе реальных данных и возможностей.",
            "<strong>Настойчивость (Принцип 13):</strong> Не сдаваться перед трудностями, извлекая уроки из неудач.",
            "<strong>Использование Внешней Экспертизы и Обратной Связи (Принцип 14):</strong> Мы учимся у других, прислушиваемся к конструктивной критике.",
            "<strong>Склонность к Действию (Принцип 15):</strong> На ранних этапах важнее начать делать и получать обратную связь, чем бесконечно планировать."
          ],
          "outro": "Эти принципы, вдохновленные философией Маргулана Сейсембаева и практиками ведущих IT-компаний, формируют нашу культуру и подход к разработке."
        },
        "section4": {
          "title": "4. О Проекте BrainMessenger (Фокус на MVP)",
          "intro": "Наш текущий фокус — разработка <strong>Минимально Жизнеспособного Продукта (MVP)</strong>. MVP — это первый, <strong>прагматичный</strong> (Принцип 12) шаг к реализации нашего видения. Мы строим <strong>прочный технический фундамент</strong> (Принцип 8), который позволит быстро и эффективно развивать продукт в будущем.",
          "mvp_features_title": "MVP включает базовые, но <strong>качественные и надежные</strong> (Принцип 3) функции, предоставляющие ключевую <strong>ценность</strong> (Принцип 2):",
          "mvp_features": [
            "<strong>Базовый Обмен Сообщениями:</strong> Отправка и получение текстовых сообщений в личных чатах и группах/каналах.",
            "<strong>Обмен Файлами:</strong> Загрузка и скачивание файлов (с оптимизацией изображений).",
            "<strong>Каналы и Группы:</strong> Базовое создание групп/каналов, присоединение к публичным каналам и чтение контента.",
            "<strong>Базовое Управление Учетной Записью:</strong> Регистрация, вход/выход, редактирование профиля (имя, аватар), базовые настройки безопасности.",
            "<strong>Основные Настройки UI:</strong> Выбор темы (Светлая/Темная), базовые настройки уведомлений и языка.",
            "<strong>Базовая Безопасность:</strong> Шифрование данных при передаче (TLS, хеширование паролей, базовые меры против SQLi/XSS/DDoS), подтверждение email при регистрации.",
            "<strong>Адаптивный UI:</strong> Интерфейс, адаптированный для мобильных (Android, iOS) и веб-платформ.",
            "<strong>Базовая Многоязычность:</strong> Поддержка нескольких языков интерфейса (английский, русский и другие согласно DocLocIn.md)."
          ],
          "outro": "Функциональность за пределами MVP (аудио/видеозвонки, расширенные функции безопасности/приватности, премиум-подписка, полный набор анимаций, интеграции с ИИ) запланирована на следующие этапы Дорожной карты."
        },
        "section5": {
          "title": "5. Как Мы Строим: История Создания и Процесс Кайдзен",
          "intro": "Процесс создания BrainMessenger — это живая история, основанная на наших принципах. Мы строим его <strong>системно</strong> (Принцип 9), шаг за шагом, документируя каждый этап и постоянно ища возможности для <strong>совершенствования (Кайдзен)</strong>.",
          "steps": [
            "<strong>Осознанное Планирование (Принцип 4):</strong> Проект начался с четкого определения глобальных целей и их декомпозиции на достижимые этапы (Roadmap).",
            "<strong>Выбор Фундамента (Принцип 8, 12):</strong> Мы тщательно подошли к выбору технологического стека — надежных и <strong>прагматичных</strong> инструментов (TypeScript, NestJS, React/RN, PostgreSQL/Neon, Cloudflare R2, Kafka, Redis), которые формируют <strong>прочный технический фундамент</strong>.",
            "<strong>Построение Ядра MVP:</strong> Реализация началась с базовых, критически важных частей системы (Аутентификация, Базовый UI, Инфраструктура, Работа с файлами). Мы применяем <strong>Склонность к Действию</strong> (Принцип 15), фокусируясь на построении работающих компонентов, даже если они пока минимальны.",
            "<strong>Непрерывное Обучение и Применение Знаний (Принцип 1):</strong> Каждая новая задача, особенно связанная с изучением или интеграцией технологий (как видно в [Video Tracker](https://www.notion.so/2025-2026-1576e78881b7435e9c3c2cf174e61b91?pvs=4) и задачах), рассматривается как возможность для роста. Мы документируем этот процесс через видео и рефлексию (Кайдзен-Час).",
            "<strong>Системный Подход к Качеству (Принцип 3, 9):</strong> Мы интегрируем тестирование на ранних этапах цикла разработки (Unit-тесты), настраиваем CI/CD пайплайны для автоматических проверок, используем инструменты мониторинга (Prometheus, Grafana, Sentry) и логирования (Winston, ELK) для постоянного контроля за <strong>здоровьем системы</strong> (Принцип 5) в реальном времени.",
            "<strong>Документация как Часть Системы Знаний:</strong> Весь процесс разработки, архитектурные решения, стандарты и требования тщательно документируются. Это не просто формальность, а часть создания <strong>системы знаний</strong>, которая ускоряет онбординг, упрощает поддержку и позволяет принимать обоснованные решения в будущем."
          ],
          "outro": "Мы строим BrainMessenger как живой, эволюционирующий организм, постоянно адаптируясь и улучшаясь на основе наших принципов и обратной связи от процесса разработки и будущих пользователей."
        },
        "section6": {
          "title": "6. Технологический Стек: Наши Инструменты для Создания Актива",
          "intro": "Мы выбрали стек, который является <strong>прагматичным</strong> (Принцип 12), <strong>надежным</strong> (Принцип 3) и <strong>масштабируемым</strong> (Принцип 8) для создания нашего <strong>цифрового АКТИВА</strong>.",
          "stack": [
            "<strong>Язык:</strong> [TypeScript](https://www.typescriptlang.org/) - Статическая типизация для повышения качества и надежности кода.",
            "<strong>Бэкенд:</strong> [Node.js](https://nodejs.org/), [NestJS](https://nestjs.com/) - Эффективный и структурированный фреймворк для серверной логики и GraphQL API.",
            "<strong>Фронтенд:</strong> [React](https://react.dev/), [Next.js](https://next.org/) (Веб), [React Native](https://reactnative.dev/) (Мобильные/Десктоп) - Кроссплатформенная разработка UI с фокусом на производительность.",
            "<strong>API:</strong> [GraphQL](https://graphql.org/) - Гибкое взаимодействие между клиентом и сервером.",
            "<strong>Реальное время:</strong> WebSockets - Мгновенная доставка сообщений.",
            "<strong>База данных:</strong> [PostgreSQL](https://www.postgresql.org/) (через [Neon](https://neon.tech/)) - Надежная и масштабируемая база данных. Neon как управляемый сервис уменьшает операционные расходы (Прагматизм).",
            "<strong>ORM:</strong> [Prisma](https://www.prisma.io/) - Типобезопасное и надежное взаимодействие с базой данных, защита от SQL-инъекций (Качество, Безопасность).",
            "<strong>Кэширование:</strong> [Redis](https://redis.io/) - Высокопроизводительное In-memory хранилище для кэширования и управления состоянием в реальном времени.",
            "<strong>Очереди:</strong> [Kafka](https://kafka.apache.org/) - Надежная асинхронная обработка задач.",
            "<strong>Хранилище файлов:</strong> [Cloudflare R2](https://www.cloudflare.com/developer/r2/) - Объектное хранилище с выгодными тарифами и без платы за исходящий трафик (Прагматизм, АКТИВ).",
            "<strong>Уведомления:</strong> [Firebase](https://firebase.google.com/) - Управляемый сервис для push-уведомлений.",
            "<strong>Email/2FA:</strong> [Gmail API](https://developers.google.com/gmail/api) - Надежная доставка транзакционных писем (коды подтверждения, 2FA).",
            "<strong>Платежи:</strong> [Stripe](https://stripe.com/), Cryptomus (За пределами MVP) - Монетизация АКТИВА, Прагматизм.",
            "<strong>Тестирование:</strong> Jest, Cypress, Detox, k6, OWASP ZAP/Burp Suite (план) - Комплексный подход к обеспечению качества.",
            "<strong>Развертывание:</strong> [Vercel](https://vercel.com/) (Веб), Docker, [Kubernetes](https://kubernetes.io/) - Автоматизированное и масштабируемое развертывание.",
            "<strong>Мониторинг:</strong> Prometheus, Grafana, Sentry (план) - Видимость системы и анализ Кайдзен."
          ]
        },
        "section7": {
          "title": "7. Архитектура: Эволюция Системы",
          "intro": "В настоящее время BrainMessenger реализован как <strong>монолитное приложение на базе NestJS</strong>. Это <strong>прагматичное</strong> (Принцип 12) решение для MVP, позволяющее быстро запустить продукт и проверить основные гипотезы.",
          "outro": "В будущем, по мере роста проекта и увеличения нагрузки, мы планируем поэтапный переход к <strong>микросервисной архитектуре</strong> с использованием подхода <strong>Strangler Pattern</strong>. Это <strong>долгосрочная стратегия</strong> (Принцип 8), которая позволит независимо масштабировать и развивать отдельные компоненты (чаты, звонки, ИИ, платежи), повышая общую <strong>надежность и гибкость</strong> системы (Принцип 3, 11).\n\nВзаимодействие между компонентами будет осуществляться через <strong>GraphQL API</strong> (синхронно) и <strong>Kafka</strong> (асинхронно), используя <strong>Apollo Federation</strong> (в будущем) для построения единой схемы API из множества микросервисов."
        },
        "section8": {
          "title": "8. Статус Проекта: Текущий Этап (MVP)",
          "content": "В настоящее время проект находится в активной фазе разработки <strong>Минимально жизнеспособного продукта (MVP)</strong> (согласно [Руководству по требованиям к проекту BrainMessenger (MVP)](https://www.notion.so/MVP-11a2a21315e54eb3b3c90171b4c7493d?pvs=4)). Мы сосредоточены на завершении основного функционала обмена сообщениями, работы с файлами, создания групп/каналов и базовых настроек, одновременно укрепляя <strong>технический фундамент</strong> (Принцип 8) и внедряя процессы <strong>непрерывного обучения</strong> и <strong>Кайдзен</strong> в нашу ежедневную работу.\n\nПрогресс документируется через задачи, код в репозитории и видеозаписи, демонстрирующие наш путь и <strong>процесс создания</strong> (Принцип 1)."
        },
        "section9": {
          "title": "9. Начало Работы (Для Разработчиков)",
          "intro": "Хотите присоединиться к нам в создании этого цифрового АКТИВА? Вот как начать:",
          "steps": [
            "Клонируйте репозиторий:\n```bash\ngit clone <URL_вашего_репозитория>\ncd BrainMessenger\n```",
            "Установите зависимости:\n```bash\nnpm install # Turborepo установит зависимости для всех пакетов\n```",
            "Настройте переменные окружения: Скопируйте `.env.example` в `.env` и заполните необходимые данные для интеграций (Neon, R2, Firebase и т.д.). <strong>Не коммитьте ваш файл `.env`!</strong>\n```bash\ncp .env.example .env\n# Заполните .env\n```",
            "Настройте базу данных: Запустите локальный PostgreSQL или используйте инстанс Neon, затем примените миграции Prisma.\n```bash\ncd backend\nnpx prisma migrate dev --name initial_setup # Или npx prisma migrate deploy для продакшена\ncd ..\n```",
            "Запустите сервисы в режиме разработки:\n```bash\nturbo run dev # Это запустит dev-серверы бэкенда и фронтенда\n# Или перейдите в конкретные пакеты и запустите их dev-скрипты:\n# cd backend && npm run start:dev\n# cd packages/web && npm run dev\n# cd packages/mobile-desktop && npm run android / npm run windows\n```"
          ],
          "outro": "Более подробные инструкции по локальной настройке и разработке можно найти в [Руководстве для Разработчиков](link_to_development_guide_doc)."
        },
        "section10": {
          "title": "10. Документация: Наша Система Знаний",
          "intro": "Этот README предоставляет высокоуровневый обзор. Вся подробная информация о проекте содержится в нашей <strong>комплексной системе документации</strong>. Изучение этих документов — часть процесса <strong>обучения</strong> (Принцип 1) и понимания <strong>системы</strong> (Принцип 9):",
          "docs_list": [
            "[<strong>Документация Требований</strong>](docs/AllRequirements/Docs/Planning/DocReq.md): Что мы строим (функциональные и нефункциональные требования).",
            "[<strong>Руководство для Разработчиков</strong>](docs/AllRequirements/Docs/Dev/DocDevIn.md): Как мы пишем код (структура, стандарты, инструменты, процесс CI/CD).",
            "[<strong>Техническая Документация</strong>](docs/AllRequirements/Docs/Dev/DocTech.md): Высокоуровневый обзор архитектуры и стека.",
            "[<strong>Спецификация API</strong>](docs/AllRequirements/Docs/Dev/DocSpec.md): Как взаимодействуют компоненты (описание GraphQL API).",
            "[<strong>Документация Интеграций</strong>](docs/AllRequirements/Docs/Dev/DocInt.md): Как мы используем внешние сервисы (Neon, R2, Firebase, Stripe и т.д.) как <strong>рычаги</strong>.",
            "[<strong>Руководство по Безопасности</strong>](docs/AllRequirements/Docs/Infrastructure/DocSecurity.md): Как мы защищаем АКТИВ и данные (принципы, методы, инструменты, процесс).",
            "[<strong>Руководство по Производительности</strong>](docs/AllRequirements/Docs/Infrastructure/DocPer.md): Как мы делаем систему быстрой (метрики, техники, инструменты оптимизации).",
            "[<strong>Руководство по Мониторингу и Логированию</strong>](docs/AllRequirements/Docs/Infrastructure/DocMonLog.md): Как мы видим состояние системы (метрики, логи, оповещения).",
            "[<strong>Документация UI</strong>](docs/AllRequirements/Docs/Design/Design/DocUI.md): Как выглядит приложение и почему (макеты, компоненты, принципы дизайна).",
            "[<strong>Руководство по Аудио</strong>](docs/AllRequirements/Docs/Sound/DocSound.md): Как используется аудио для улучшения UX.",
            "[<strong>Руководство по Поддержке и Обслуживанию</strong>](docs/AllRequirements/Docs/Support/DocSupport.md): Как мы поддерживаем систему и пользователей после релиза.",
            "[<strong>Спецификация Ошибок</strong>](docs/AllRequirements/Docs/Testing/DocSpecError.md): Как мы обрабатываем и сообщаем об ошибках.",
            "[<strong>Руководство по Тестированию</strong>](docs/AllRequirements/Docs/Testing/DocTesting.md): Как мы проверяем качество и надежность.",
            "[<strong>План Миграции на Микросервисы</strong>](docs/AllRequirements/Docs/Infrastructure/DocMigrationMicro.md): Наша долгосрочная стратегия эволюции архитектуры.",
            "[<strong>Руководство по Требованиям к Проекту (MVP)</strong>](docs/AllRequirements/Docs/Planning/DocReq.md): Детальный анализ требований MVP и статус реализации."
          ]
        },
        "section11": {
          "title": "11. Вклад",
          "content": "Мы приветствуем вклад в создание этого цифрового АКТИВА! Если у вас есть идеи, предложения или вы хотите помочь с кодом, пожалуйста, обратитесь к [Руководству по Вкладу](CONTRIBUTING.md) (если доступно)."
        }
      },
        "design": {
      "title": "Документация Дизайна BrainMessenger",
      "subtitle": "Система Качества и Ценности",
      "section1": {
        "title": "1. Введение: Дизайн как Фундамент Ценности",
        "name": "Система Дизайна BrainMessenger",
        "description": "Эта дизайн-система определяет визуальные и функциональные стандарты для интерфейса BrainMessenger. Наша цель — создать интерфейс, который не просто хорошо выглядит, но и является <strong>интуитивно понятным, эффективным и доступным</strong> (Принцип 2: Создание Ценности), опираясь на принципы <strong>качество > количество</strong> (Принцип 3) и <strong>прагматизма</strong> (Принцип 12) в выборе решений.",
        "goal": "Обеспечить <strong>единообразие, надежность и положительный пользовательский опыт</strong> на всех платформах (Windows, Android, веб), делая BrainMessenger <strong>полезным АКТИВОМ</strong> (Принцип 10) для пользователей.",
        "principles_title": "Принципы, которыми руководствуется дизайн:",
        "principles": [
          "<strong>Создание Ценности (Принцип 2):</strong> Дизайн должен быть функциональным и решать задачи пользователя максимально удобно и эффективно.",
          "<strong>Качество > Количество (Принцип 3):</strong> Фокус на отточенности ключевых элементов, а не на множестве непродуманных деталей. Дизайн должен быть <strong>надежным</strong> и <strong>продуманным</strong>.",
          "<strong>Прагматизм и Реализм (Принцип 12):</strong> Выбор дизайнерских решений, реализуемых с учетом технических ограничений (например, оптимизация анимаций).",
          "<strong>Целостность (Принцип 7):</strong> Визуальная и функциональная целостность на всех платформах.",
          "<strong>Здоровье как Фундамент (Принцип 5):</strong> Внимание к доступности (WCAG), чтобы дизайн не создавал излишней нагрузки (зрительной, когнитивной) на пользователя."
        ]
      },
      "section2": {
        "title": "2. Цветовая палитра: Визуальный язык BrainMessenger",
        "intro": "Цвета разделены для Light и Dark режимов, поддерживая переключение темы (\"Ночной режим\"). Все цвета заданы в HEX.",
        "light_mode_title": "2.1. Light Mode",
        "light_mode_table": [
          ["Категория", "Цвет (HEX)", "Назначение"],
          ["<strong>Primary Gradient</strong>", "`#A7F43A` → `#00C853`", "Основной градиент для акцентных элементов (кнопки \"Начать\", иконки)"],
          ["<strong>Accent</strong>", "`#FF6347`", "Акцентные элементы (ошибки, важные сообщения)"],
          ["<strong>Secondary</strong>", "`#00BFFF`", "Второстепенные кнопки, ссылки, интерактивные элементы"],
          ["<strong>Success</strong>", "`#96C93D`", "Подтверждения, успешные действия"],
          ["<strong>Background</strong>", "`#FFFFFF`", "Основной фон"],
          ["<strong>Surface</strong>", "`#F0F0F0`", "Карточки, панели, фоны сообщений"],
          ["<strong>Text Primary</strong>", "`#333333`", "Основной текст"],
          ["<strong>Text Secondary</strong>", "`#4D4D4D`", "Вторичный текст, подсказки, метаданные"],
          ["<strong>Disabled</strong>", "`#B0B0B0`", "Неактивные элементы"],
          ["<strong>Border</strong>", "`#E8E8D9`", "Границы, разделители"]
        ],
        "dark_mode_title": "2.2. Dark Mode",
        "dark_mode_table": [
          ["Категория", "Цвет (HEX)", "Назначение"],
          ["<strong>Primary Gradient</strong>", "`#F2F047` → `#1ED94F`", "Основной градиент для акцентных элементов"],
          ["<strong>Accent</strong>", "`#FF6347`", "Акцентные элементы (ошибки)"],
          ["<strong>Secondary</strong>", "`#00BFFF`", "Второстепенные кнопки, ссылки"],
          ["<strong>Success</strong>", "`#96C93D`", "Подтверждения, успешные действия"],
          ["<strong>Background</strong>", "`#1A1A1A`", "Основной фон"],
          ["<strong>Surface</strong>", "`#333333`", "Карточки, панели, фоны сообщений"],
          ["<strong>Text Primary</strong>", "`#FFFFFF`", "Основной текст"],
          ["<strong>Text Secondary</strong>", "`#D9E8D9`", "Вторичный текст, подсказки"],
          ["<strong>Disabled</strong>", "`#4D4D4D`", "Неактивные элементы"],
          ["<strong>Border</strong>", "`#B0B0B0`", "Границы, разделители"]
        ],
        "premium_colors_title": "2.3. Цвета Премиум-Функций (Визуальное выделение Ценности)",
        "premium_colors": [
          "<strong>Premium Accent:</strong> `#FFD600` (Золотой)",
          "<strong>Premium Secondary:</strong> `#2196F3` (Синий)",
          "Используются для визуального выделения премиум-функций (например, в анимациях нейронных связей, специальных элементах UI), подчеркивая их <strong>дополнительную ценность</strong> (Принцип 2, 10)."
        ],
        "color_application_title": "2.4. Применение Цветов (Примеры)",
        "color_application": [
          {
            "title": "Welcome Screen (со скриншота):",
            "items": [
              "Фон: `#1A1A1A` (Dark Mode).",
              "Кнопка \"Get Started\": Градиент `#F2F047` → `#1ED94F`.",
              "Иконка чата: `#F2F047` (обводка) с белым символом внутри.",
              "Текст: `#FFFFFF` (Welcome to Brain Messenger), `#D9E8D9` (подсказка)."
            ]
          },
          {
            "title": "Переключение темы:",
            "items": [
              "Реализовано через глобальный флаг `themeMode` (`Light`/`Dark`).",
              "Пример в React Native:\n```jsx\nimport { useColorScheme } from 'react-native';\nconst themeMode = useColorScheme() === 'dark' ? 'Dark' : 'Light';\nconst backgroundColor = themeMode === 'Dark' ? '#1A1A1A' : '#FFFFFF'; // Пример выбора фона\n```"
            ]
          }
        ],
        "usage_recommendations_title": "2.5. Рекомендации по Использованию Цветов",
        "usage_recommendations": [
          "<strong>Градиенты:</strong> Используйте `#A7F43A` → `#00C853` или `#F2F047` → `#1ED94F` (в зависимости от темы) для ключевых действий и акцентных элементов, привлекающих внимание к <strong>ценности</strong> (Принцип 2).",
          "<strong>Темная тема:</strong> Используйте `#1A1A1A` или `#212121` как основной фон для снижения нагрузки на глаза (связь с Принципом 5: Здоровье).",
          "<strong>Контраст:</strong> Всегда проверяйте контрастность текста и элементов для обеспечения <strong>доступности</strong> (WCAG 2.1 AA) и соответствия Принципу 7 (Целостность). Используйте инструменты вроде WebAIM Contrast Checker."
        ]
      },
      "color_application": [
        {
          "title": "Welcome Screen (со скриншота):",
          "items": [
            "Фон: `#1A1A1A` (Dark Mode).",
            "Кнопка \"Get Started\": Градиент `#F2F047` → `#1ED94F`.",
            "Иконка чата: `#F2F047` (обводка) с белым символом внутри.",
            "Текст: `#FFFFFF` (Welcome to Brain Messenger), `#D9E8D9` (подсказка)."
          ]
        },
        {
          "title": "Переключение темы:",
          "items": [
            "Реализовано через глобальный флаг `themeMode` (`Light`/`Dark`).",
            "Пример в React Native:\n```jsx\nimport { useColorScheme } from 'react-native';\nconst themeMode = useColorScheme() === 'dark' ? 'Dark' : 'Light';\nconst backgroundColor = themeMode === 'Dark' ? '#1A1A1A' : '#FFFFFF'; // Пример выбора фона\n```"
          ]
        }
      ],
      "section3": {
        "title": "3. Типографика: Читабельность как Основа Эффективности",
        "intro": "Выбор шрифта и его применение основываются на обеспечении максимальной читабельности и доступности, что критически важно для эффективного усвоения информации и снижения когнитивной нагрузки (связь с Принципом 5: Здоровье и Принципом 2: Ценность).",
        "primary_font_title": "3.1. Основной шрифт",
        "primary_font": [
          "<strong>Семейство:</strong> Roboto (Google Fonts)",
          "<strong>Запасной:</strong> Sans-serif",
          "<strong>Причина:</strong> Высокая читабельность на разных размерах экрана, широкая поддержка символов (многоязычность), открытая лицензия и доступность."
        ],
        "sizes_styles_title": "3.2. Размеры и стили (Шкала для Иерархии)",
        "sizes_styles_table": [
          ["Уровень", "Размер", "Начертание", "Использование"],
          ["H1 (Заголовок)", "24px", "Bold", "Основные заголовки экранов (например, \"Чаты\")"],
          ["H2 (Подзаголовок)", "18px", "Medium", "Второстепенные заголовки, названия групп"],
          ["Body", "16px", "Regular", "Основной текст сообщений, список чатов"],
          ["Caption", "14px", "Regular", "Подписи под фото, время сообщений, мелкий текст"],
          ["Button", "16px", "Medium", "Текст кнопок действий"]
        ],
        "notes_title": "Примечания:",
        "notes": [
          "<strong>Высота строки (Line Height):</strong> Минимум 1.5 для основного текста для улучшения читабельности.",
          "<strong>Кастомизация (Принцип 2):</strong> Пользователь может выбрать альтернативный шрифт в настройках (например, Open Sans) для адаптации под свои предпочтения.",
          "<strong>Доступность:</strong> Соблюдение контраста и минимального размера шрифта для соответствия WCAG."
        ]
      },
      "section4": {
        "title": "4. Анимации: Оптимизация и Смысл (Принцип 12: Прагматизм)",
        "intro": "Анимации в BrainMessenger используются для улучшения пользовательского опыта, предоставления визуальной обратной связи и придания интерфейсу живости. Однако они должны быть <strong>прагматичными, оптимизированными</strong> (<2 ГБ RAM), и <strong>не создавать излишней нагрузки</strong> (связь с Принципом 5: Здоровье).",
        "principles_title": "4.1. Принципы Анимаций",
        "principles": [
          "<strong>Смысл:</strong> Каждая анимация должна иметь четкую цель – объяснить переход, привлечь внимание к важному, подтвердить действие.",
          "<strong>Плавность:</strong> Использование `ease-in-out` или `ease-out` для натурального движения.",
          "<strong>Оптимизация:</strong> Анимации не должны замедлять интерфейс или потреблять много ресурсов. Длительность подобрана для баланса между плавностью и скоростью.",
          "<strong>Доступность:</strong> Избегание слишком быстрых или мигающих анимаций, которые могут вызвать дискомфорт или приступы у чувствительных пользователей."
        ],
        "list_title": "4.2. Список Анимаций (Примеры)",
        "list_table": [
          ["Название", "Описание", "Триггер", "Параметры", "Связь с Принципами", "Цвета (Light/Dark)"],
          ["Переключение слайдов", "Сдвиг слайдов (Welcome Screen)", "Свайп/клик по стрелке", "0.3 сек, slide left/right", "P2 (Онбординг)", "#96C93D / #96C9D"],
          ["Открытие чата", "Чат появляется снизу вверх", "Клик по чату в списке", "0.3 сек, ease-in-out", "P2 (Навигация)", "#00BFFF / #00BFFF"],
          ["Нажатие кнопки", "Визуальный фидбэк при клике (уменьшение)", "Клик по кнопке", "0.2 сек, scale", "P2 (Фидбэк)", "Градиент #F2F047→#1ED94F"],
          ["Отправка сообщения", "Сообщение появляется с плавным затуханием", "Клик \"Отправить\"", "0.3 сек, fade-in", "P2 (Фидбэк)", "#96C93D / #96C93D"],
          ["Переход между экранами", "Сдвиг экрана вправо/влево (базовая навигация)", "Навигация", "0.3 сек, slide", "P2 (Навигация)", "#B0B0B0 / #4D4D4D"],
          ["Анимация иконок (Morph)", "Преобразование иконки (например, mute → unmute)", "Клик (переключение состояния)", "0.4 сек, morph", "P2 (Состояние)", "#FF6347 / #FF6347"],
          ["Волны при нажатии (Ripple)", "Радиальные волны от точки нажатия (фидбэк)", "Клик по кнопке/элементу", "0.3 сек, ripple", "P2 (Фидбэк)", "#F2F047 / #F2F047"],
          ["Глитч-эффект (Premium)", "Искажение текста для премиум (визуализация)", "Активация подписки", "0.2 сек, glitch", "P2, P10 (Выделение)", "#FF6347 / #FF6347"],
          ["Нейронные связи (Premium)", "Пульсирующие линии (визуализация Актива)", "Премиум-экран", "0.5 сек, pulse", "P2, P10 (Выделение)", "#96C93D / #96C93D"]
        ],
        "implementation_examples_title": "4.3. Примеры Реализации (Фрагменты кода)",
        "css_ripple_title": "CSS для Ripple-эффекта:",
        "css_ripple_code": ".ripple {\n  background: linear-gradient(45deg, #F2F047, #1ED94F); /* Или другие цвета/градиент */\n  border-radius: 50%;\n  animation: ripple 0.3s ease-out;\n}\n@keyframes ripple {\n  to { transform: scale(2); opacity: 0; }\n}",
        "rn_icon_title": "React Native для анимированной иконки:",
        "rn_icon_code": "import Animated from 'react-native-reanimated'; // Пример библиотеки\nimport Icon from 'react-native-vector-icons/MaterialIcons'; // Пример библиотеки\n\nconst color = themeMode === 'Dark' ? '#FFFFFF' : '#333333';\n// Создание анимированного компонента Icon\nconst AnimatedIcon = Animated.createAnimatedComponent(Icon);\n\n// Пример использования с анимацией scale (предполагая, что 'scale' - это Animated.Value)\n<AnimatedIcon name=\"volume-up\" color={color} style={{ transform: [{ scale: scale }] }} />"
      },
      "section5": {
        "title": "5. Выравнивание и Сетка: Структура и Порядок (Принцип 9: Система)",
        "intro": "Использование последовательной системы выравнивания и модульной сетки — это основа для создания <strong>системного, легко поддерживаемого и визуально гармоничного</strong> интерфейса (Принцип 9: Система).",
        "base_grid": "<strong>Базовая Сетка:</strong> 8px (базовый шаг для определения размеров элементов, отступов, интервалов). Все значения должны быть кратны 8 (или 4 для очень мелких элементов).",
        "alignment": [
          "Используется принцип <strong>визуальной иерархии</strong>: более важные элементы располагаются выше или визуально доминируют.",
          "<strong>Вертикальный поток:</strong> Контент на экранах организован сверху вниз: Заголовок → Поле ввода → Кнопка действия.",
          "<strong>Горизонтальное выравнивание:</strong> Элементы в контейнерах выравниваются по левому краю (для LTR) или правому (для RTL), если не требуется центрирование (например, заголовки в шапке).",
          "<strong>Отступы (Padding/Margin):</strong> Используются значения из 8px шкалы (8, 16, 24, 32, 40, 48 px и т.д.) для создания четких интервалов между элементами и группами элементов."
        ],
        "adaptability_title": "<strong>Адаптивность и Отзывчивость:</strong>",
        "adaptability": [
          "Дизайн адаптируется к различным размерам экрана для обеспечения <strong>ценности</strong> (Принцип 2) на любом устройстве.",
          "<strong>Мобильные устройства:</strong> 320px–767px (Обычно одноколоночный макет).",
          "<strong>Планшеты:</strong> 768px–1023px (Возможно двухколоночный макет, боковые панели).",
          "<strong>Десктоп:</strong> 1024px+ (Широкий макет, многоколоночный дизайн, боковые панели)."
        ]
      },
      "section6": {
        "title": "6. Принципы Доступности (WCAG 2.1 AA): Дизайн для Всех (Принцип 5: Здоровье, Принцип 7: Целостность)",
        "intro": "<strong>Доступность — это не опция, а фундаментальное требование</strong> (аналогично Принципу 5: Здоровье как Фундамент) для создания <strong>целостного</strong> (Принцип 7) и <strong>ценного</strong> (Принцип 2) продукта, которым могут пользоваться все, независимо от их возможностей или технологий, которые они используют. Мы стремимся соответствовать уровню WCAG 2.1 AA.",
        "principles": [
          "<strong>Цветовой Контраст:</strong> Текстовые элементы должны иметь минимальный коэффициент контрастности 4.5:1 (для обычного текста) и 3:1 (для крупного текста или иконок) относительно фона. Это проверяется для обеих тем (Light/Dark).",
          "<strong>Навигация с Клавиатуры:</strong> Все интерактивные элементы (кнопки, ссылки, поля ввода) должны быть доступны для навигации с помощью клавиатуры (Tab, Shift+Tab) и активации (Enter, Space).",
          "<strong>Поддержка Программ Чтения с Экрана:</strong> Используйте семантическую разметку (HTML) и ARIA-атрибуты для предоставления контекста и информации пользователям программ чтения с экрана (например, описания для иконок, состояния элементов).",
          "<strong>Визуальный Индикатор Фокуса:</strong> Для пользователей клавиатуры должен быть четкий и видимый индикатор текущего сфокусированного элемента (например, синий контур `#007BFF`).",
          "<strong>Обработка Ошибок:</strong> Сообщения об ошибках должны быть четкими, понятными и легко идентифицируемыми пользователями, включая пользователей программ чтения с экрана.",
          "<strong>Поддержка RTL (Справа налево):</strong> Дизайн адаптируется для языков с направлением письма справа налево (например, арабский), включая зеркальное отображение макета, иконок и текста (см. DocLocIn.md)."
        ]
      },
      "section7": {
        "title": "7. Примечания и Рекомендации",
        "notes": [
          "<strong>Пользовательские Настройки:</strong> Помните, что некоторые аспекты дизайна (цвета чатов, шрифты) могут быть изменены пользователем в настройках. Дизайн-система должна учитывать эту гибкость.",
          "<strong>Тестирование на Реальных Устройствах:</strong> Все компоненты дизайна должны быть протестированы на различных устройствах, с разным разрешением экрана и в различных условиях освещения, чтобы убедиться в их эффективности и доступности.",
          "<strong>Живая Документация:</strong> Эта дизайн-система является живым документом. Она будет дополняться новыми компонентами, шаблонами и рекомендациями по мере развития продукта, отражая принципы <strong>непрерывного совершенствования</strong> (Принцип 1) и <strong>системного подхода</strong> (Принцип 9).",
          "<strong>Дизайн как часть Процесса Кайдзен:</strong> Дизайнерские решения анализируются и улучшаются на основе обратной связи и реального использования, интегрируясь в общий процесс Кайдзен (Принцип 9, 14)."
        ]
      }
    },
    "localization_guide": {
          "title": "Руководство по Локализации BrainMessenger (Доступность и Масштабирование)",
          "subtitle": "Систематический Подход к Расширению Ценности",
          "section1": {
            "title": "1. Введение: Расширение Ценности через Доступность",
            "project_name": "<strong>Название проекта:</strong> BrainMessenger",
            "description": "<strong>Описание:</strong> Это руководство описывает процесс локализации BrainMessenger — ключевой шаг для обеспечения <strong>доступности</strong> и <strong>ценности</strong> (Принцип 2) продукта для широкой аудитории по всему миру. Мы рассматриваем локализацию не просто как перевод строк, а как <strong>систематический процесс</strong> (Принцип 9) адаптации интерфейса и контента, который позволит нам <strong>масштабировать наше влияние</strong> (Принцип 2, 8).",
            "goal": "<strong>Цель:</strong> Сделать BrainMessenger понятным и удобным для пользователей из разных культур, начиная с базового набора языков и создавая <strong>надежную систему</strong> (Принцип 9) для легкого добавления новых в будущем.",
            "current_status": "<strong>Текущий статус:</strong> Базовая поддержка английского языка (MVP). Идет планирование и подготовка к добавлению новых языков в рамках текущих этапов разработки (см. Дорожную карту).",
            "principles_title": "<strong>Принципы, которыми руководствуется локализация:</strong>",
            "principles": [
              "<strong>Создание Ценности (Принцип 2):</strong> Локализация напрямую повышает ценность продукта для неанглоязычных пользователей.",
              "<strong>Система и Оптимизация (Принцип 9):</strong> Процесс локализации строится как четкая, повторяемая система для эффективности.",
              "<strong>Прагматизм и Реализм (Принцип 12):</strong> Выбор начального набора языков основывается на потенциальном охвате и ресурсах.",
              "<strong>Внешняя Экспертиза и Обратная Связь (Принцип 14):</strong> Привлечение профессиональных переводчиков и сбор обратной связи от пользователей на разных языках."
            ]
          },
          "section2": {
            "title": "2. Цели Локализации",
            "goals": [
              "Обеспечить поддержку <strong>минимум 5 ключевых языков</strong> (Английский, Испанский, Французский, Русский, Арабский) для старта MVP — (Требование NFR-11, соответствующее Принципу 12: Прагматизм).",
              "Реализовать <strong>адаптацию пользовательского интерфейса для языков с направлением письма справа налево (RTL)</strong>, таких как арабский (Принцип 2: Доступность).",
              "Поддерживать <strong>единообразие терминологии и стиля</strong> во всех переводах, используя централизованные инструменты (Принцип 9: Система).",
              "Создать <strong>эффективный и простой процесс</strong> добавления новых языков по мере роста базы пользователей и поступления запросов (Принцип 9: Масштабирование, Принцип 12: Прагматизм, Принцип 14: Обратная связь)."
            ]
          },
          "section3": {
            "title": "3. Инструменты и Технологии: Надежный Фундамент (Принцип 8, 9)",
            "intro": "Выбор инструментов основан на <strong>прагматизме</strong> (Принцип 12), <strong>надежности</strong> и поддержке <strong>системного подхода</strong> (Принцип 9).",
            "table": [
              ["Инструмент", "Назначение", "Установка/Конфигурация"],
              ["`i18next`", "Основная библиотека для управления переводами в Frontend (React Native). Поддерживает интерполяцию, контексты.", "`npm install i18next react-i18next`"],
              ["`react-intl`", "Библиотека для локализованного форматирования дат, чисел, валют в Frontend.", "`npm install react-intl`"],
              ["`Transifex`", "Профессиональная платформа для управления переводами, привлечения переводчиков и обеспечения качества перевода.", "Регистрация на [transifex.com](http://transifex.com/)"],
              ["`rtlcss`", "Утилита для автоматической трансформации CSS-стилей для поддержки RTL-языков.", "`npm install -g rtlcss` (глобально) или `npm install rtlcss --save-dev`"],
              ["<strong>JSON файлы</strong>", "Формат хранения переводов.", "Стандартный."]
            ]
          },
          "section4": {
            "title": "4. Структура Файлов Переводов: Порядок в Системе (Принцип 9)",
            "intro": "Переводы организованы в четкой файловой структуре для удобства управления (Принцип 9: Система).",
            "subsection4_1": {
              "title": "4.1. Расположение",
              "description": "Файлы переводов хранятся в директории `locales` внутри `frontend/src`:",
              "code_block": "frontend/\n├── src/\n│ ├── locales/\n│ │ ├── en.json # Английский (базовый)\n│ │ ├── es.json # Испанский\n│ │ ├── fr.json # Французский\n│ │ ├── ru.json # Русский\n│ │ ├── ar.json # Арабский (пример RTL)\n│ └── index.ts # Конфигурация i18next"
            },
            "subsection4_2": {
              "title": "4.2. Формат JSON: Контекст и Гибкость",
              "points": [
                "<strong>Ключи:</strong> Используется `camelCase`. Ключи должны быть <strong>описательными и отражать контекст</strong> использования строки (например, `sendButton` вместо просто `send`).",
                "<strong>Значения:</strong> Содержат переводимый текст. Поддерживается <strong>интерполяция</strong> для вставки динамических данных (например, имена пользователей).",
                "<strong>Пример `en.json`:</strong>"
              ],
              "code_block": "{\n  \"welcomeTitle\": \"Welcome to BrainMessenger!\",\n  \"sendButton\": \"Send\",\n  \"errors\": {\n    \"unauthorized\": \"Please log in again to continue.\",\n    \"notFound\": \"The requested item could not be found.\"\n  },\n  \"chat\": {\n    \"newMessageNotification\": \"New message from {{name}}\",\n    \"unreadCount\": \"{{count}} unread messages\"\n  },\n  \"settings\": {\n    \"language\": \"Language\",\n    \"theme\": \"Theme\"\n  }\n}"
            },
            "subsection4_3": {
              "title": "4.3. RTL-флаг: Адаптация Интерфейса",
              "description": "Для языков с направлением справа налево в начало соответствующего JSON-файла добавляется метаданные для индикации:",
              "code_block": "{\n  \"rtl\": true,\n  \"welcomeTitle\": \"مرحبًا بك في BrainMessenger!\"\n  // ... остальные переводы\n}",
              "outro": "Этот флаг используется Frontend-приложением для соответствующей адаптации стилей и макета."
            }
          },
          "section5": {
            "title": "5. Настройка Локализации: Интеграция в Систему (Принцип 9)",
            "intro": "Локализация интегрируется как в Frontend (для отображения переведенного UI), так и в Backend (для возврата локализованных ошибок или уведомлений).",
            "subsection5_1": {
              "title": "5.1. Frontend (React Native): Использование i18next",
              "step1_title": "1. Инициализация i18next:",
              "step1_intro": "В главном файле приложения или файла конфигурации (frontend/src/index.ts или подобном):",
              "step1_code": "import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\n\n// Импорт всех файлов локалей\nimport en from './locales/en.json'\nimport es from './locales/es.json'\nimport fr from './locales/fr.json'\nimport ru from './locales/ru.json'\nimport ar from './locales/ar.json'\n\n// Определение ресурсов\nconst resources = {\n  en: { translation: en },\n  es: { translation: es },\n  fr: { translation: fr },\n  ru: { translation: ru },\n  ar: { translation: ar },\n};\n\ni18n\n  .use(initReactI18next) // Подключение react-i18next\n  .init({\n    resources,\n    lng: 'en', // Язык по умолчанию при первом запуске (может определяться по системным настройкам или выбору пользователя)\n    fallbackLng: 'en', // Резервный язык, если текущий перевод отсутствует\n    interpolation: {\n      escapeValue: false // Позволяет использовать HTML теги в переводах (осторожно!)\n    }\n  });\n\nexport default i18n;",
              "step2_title": "2. Использование перевода в компонентах:",
              "step2_intro": "Используйте хук `useTranslation` для доступа к функции `t` и объекту `i18n`.",
              "step2_code": "import { useTranslation } from 'react-i18next';\nimport { Text, Button, View } from 'react-native';\n\nconst WelcomeScreen = () => {\n  const { t, i18n } = useTranslation(); // Получаем функцию t и объект i18n\n\n  return (\n    <View>\n      {/* Использование простого перевода */}\n      <Text>{t('welcomeTitle')}</Text>\n      \n      {/* Использование перевода с интерполяцией */}\n      {/* Предполагается, что где-то есть состояние unreadCount */}\n      <Text>{t('chat.unreadCount', { count: 5 })}</Text> \n\n      {/* Использование перевода для текста кнопки */}\n      <Button title={t('sendButton')} onPress={sendMessage} />\n      \n      {/* Пример смены языка */}\n      <Button title={t('settings.language')} onPress={() => i18n.changeLanguage('ar')} />\n    </View>\n  );\n};",
              "step3_title": "3. Смена языка:",
              "step3_description": "Язык меняется вызовом `i18n.changeLanguage('код_языка')`. Обычно это делается в настройках пользователя."
            },
            "subsection5_2": {
              "title": "5.2. Backend (NestJS): Локализация Ошибок и Уведомлений",
              "intro": "Backend может возвращать локализованные сообщения об ошибках или уведомления, опираясь на язык, переданный Frontend (например, в заголовке Accept-Language или настройках пользователя).",
              "example_title": "Использование локализованных сообщений при выбрасывании ошибок:",
              "example_code": "import { HttpException, HttpStatus } from '@nestjs/common';\nimport { t } from 'i18next'; // Предполагается, что i18next инициализирован и в Backend\n\n// В сервисе или контроллере\nif (!user) {\n  // Определяем язык пользователя (например, из request.headers['accept-language'])\n  const userLang = determineUserLanguage(request); \n  throw new HttpException(t('errors.unauthorized', { lng: userLang }), HttpStatus.UNAUTHORIZED);\n}",
              "outro": "Локаль пользователя определяется из заголовка `Accept-Language` (стандартный подход) или сохраняется в профиле пользователя в базе данных после его выбора в настройках приложения."
            },
            "subsection5_3": {
              "title": "5.3. RTL-адаптация (Справа Налево): Зеркальное Отображение Системы",
              "intro": "Для языков с RTL (арабский, иврит и др.) необходимо зеркально отобразить макет и некоторые элементы интерфейса.",
              "styles_title": "Стили (CSS/CSS-in-JS):",
              "styles_description": "Используйте `rtlcss` в процессе сборки или условные стили в коде. `rtlcss` автоматически преобразует свойства вроде `margin-left`, `padding-right`, `text-align: left` и т.п. в их RTL-эквиваленты (`margin-right`, `padding-left`, `text-align: right`).",
              "styles_code": "/* Исходный CSS для LTR */\n.message-bubble {\n  margin-left: 10px;\n  text-align: left;\n}\n/* После обработки rtlcss для RTL */\n.message-bubble {\n  margin-right: 10px;\n  text-align: right;\n}",
              "react_native_title": "React Native:",
              "react_native_description": "React-Native имеет встроенную поддержку RTL через `I18nManager`.",
              "react_native_code": "import { I18nManager } from 'react-native';\nimport i18n from './index'; // Ваш файл инициализации i18next\n\n// В главном файле приложения, перед рендером\nconst isRTL = i18n.language === 'ar' || i18n.language === 'he'; // Проверяем, является ли текущий язык RTL\n\n// ForceRTL может потребовать перезагрузки приложения для полной силы\nif (isRTL !== I18nManager.isRTL) {\n  I18nManager.forceRTL(isRTL);\n  // Optional: Restart the app to apply RTL layout fully\n  // RNRestart.Restart(); \n}\n\n// Некоторые стили могут требовать ручной адаптации, если auto-conversion недостаточно\nconst containerStyle = {\n  flexDirection: isRTL ? 'row-reverse' : 'row',\n  textAlign: isRTL ? 'right' : 'left',\n};",
              "icons_title": "Иконки:",
              "icons_description": "Некоторые иконки (например, стрелки \"назад\", \"далее\") должны быть зеркально отображены для RTL. Это можно делать условно в коде или использовать RTL-ready наборы иконок."
            }
          },
          "section6": {
            "title": "6. Процесс Добавления Нового Языка: Масштабируемая Система (Принцип 9)",
            "intro": "Процесс добавления нового языка построен как четкая, повторяемая последовательность действий для обеспечения эффективности (Принцип 9).",
            "steps": [
              {
                "title": "1. Создание базового файла перевода:",
                "description": "Скопируйте актуальный `en.json` (или другой наиболее полный файл) в `frontend/src/locales/<code>.json`, где `<code>` — двухбуквенный код нового языка (например, `de.json` для немецкого). Добавьте `\"rtl\": true` в начало файла, если новый язык RTL."
              },
              {
                "title": "2. Загрузка на платформу переводов (Transifex):",
                "description": "Загрузите новый файл `<code>.json` в проект BrainMessenger на Transifex. Система автоматически определит, какие строки нуждаются в переводе."
              },
              {
                "title": "3. Организация процесса перевода:",
                "description": "Назначьте переводчиков (профессионалов или проверенных участников сообщества, Принцип 14) для нового языка в Transifex. Отвечайте на их вопросы по контексту строк. Контролируйте прогресс перевода в Transifex."
              },
              {
                "title": "4. Экспорт и Интеграция перевода:",
                "description": "После завершения перевода экспортируйте готовый файл `<code>.json` из Transifex. Поместите его обратно в директорию `frontend/src/locales/`. Импортируйте новый ресурс в файле инициализации i18next (`frontend/src/index.ts`) и добавьте его в объект `resources`."
              },
              {
                "title": "5. Добавление опции выбора языка в UI:",
                "description": "Добавьте новый язык в список доступных языков в разделе \"Настройки\" > \"Язык\"."
              },
              {
                "title": "6. Тестирование:",
                "description": "Критически важный шаг (Принцип 3: Качество). Переключите язык в настройках приложения. Проверьте:\n- Корректность перевода всех строк в UI.\n- Отсутствие обрезки текста (некоторые языки длиннее английского).\n- Корректное отображение UI для RTL-языков (зеркальность, выравнивание).\n- Локализованное форматирование дат и чисел.\n- Переведенные сообщения об ошибках с Backend.\n- Используйте сценарии тестирования, описанные в разделе 10."
              }
            ]
          },
          "section7": {
            "title": "7. Поддерживаемые Языки (Начальный Список и План)",
            "intro": "Начальный список языков, выбранный по прагматическим соображениям (Принцип 12) и потенциальному охвату.",
            "table": [
              ["Код", "Язык", "Направление", "Статус", "План (Q 2025)"],
              ["en", "Английский", "LTR", "Реализован (Базовый)", "-"],
              ["es", "Испанский", "LTR", "В плане (Q3)", "Q3"],
              ["fr", "Французский", "LTR", "В плане (Q3)", "Q3"],
              ["ru", "Русский", "LTR", "В плане (Q3)", "Q3"],
              ["ar", "Арабский", "RTL", "В плане (Q3, требуется RTL)", "Q3"]
            ],
            "expansion_title": "<strong>Расширение списка:</strong>",
            "expansion_description": "Новые языки будут добавляться на основе обратной связи (Принцип 14) и анализа потенциальной ценности (Принцип 2) для роста аудитории (например, если >10% запросов о поддержке нового языка)."
          },
          "section8": {
            "title": "8. Рекомендации: Лучшие Практики Локализации",
            "subsection8_1": {
              "title": "8.1. Для Разработчиков (Пишем Код, Готовый к Миру)",
              "recommendations": [
                "<strong>Не хардкодьте строки!</strong> Все строки, которые видит пользователь, должны быть вынесены в файлы локализации и использоваться через функцию `t('ключ')` (Принцип 9: Система).",
                "<strong>Используйте интерполяцию</strong> для строк с переменными данными (`t('chat.newMessageNotification', { name: user.name })`), а не конкатенацию строк в коде.",
                "<strong>Учитывайте плюрализацию</strong> (формы единственного/множественного числа) при работе со счетчиками (`{{count}} unread messages`). i18next и react-intl поддерживают это.",
                "<strong>Используйте `react-intl`</strong> для всех операций с датами, числами, валютами, чтобы их формат был корректным для каждой локали (Принцип 3: Качество, Принцип 2: Ценность).",
                "<strong>Тестируйте UI с длинными переводами</strong> (например, немецкий, который часто длиннее английского) и RTL-языками, чтобы убедиться, что макет не ломается и текст не обрезается (Принцип 3: Качество)."
              ]
            },
            "subsection8_2": {
              "title": "8.2. Для Дизайнеров (Рисуем Макеты, Гибкие к Языкам)",
              "recommendations": [
                "<strong>Учитывайте, что текст на других языках может быть на 30% (и более) длиннее английского.</strong> Оставляйте достаточно пространства в компонентах.",
                "<strong>Проектируйте макеты с учетом зеркального отображения для RTL.</strong> Иконки направлений, расположение текста и элементов должны меняться (Принцип 2: Доступность)."
              ]
            },
            "subsection8_3": {
              "title": "8.3. Для Переводчиков (Создаем Понятный Контент)",
              "recommendations": [
                "<strong>Сохраняйте контекст.</strong> Одно и то же английское слово может переводиться по-разному в зависимости от того, где оно используется (например, \"Send\" для сообщения или для заявки). Платформы вроде Transifex помогают добавлять контекстные комментарии.",
                "<strong>Придерживайтесь последовательной терминологии,</strong> используйте глоссарий, если он есть.",
                "<strong>Сохраняйте тон приложения</strong> (дружелюбный, но профессиональный, особенно в системных сообщениях и ошибках).",
                "<strong>Используйте возможности интерполяции и плюрализации</strong> в файлах перевода."
              ]
            },
            "section9": {
              "title": "9. Форматирование (Даты, Числа, Валюты): Детали, Создающие Качество (Принцип 3)",
              "intro": "Корректное отображение локализованных данных критически важно для качества (Принцип 3) и удобства (Принцип 2).",
              "dates_title": "<strong>Даты и Время:</strong>",
              "dates_code": "import { FormattedDate, FormattedTime } from 'react-intl';\n\n// Отобразит дату в формате, соответствующем текущей локали\n<FormattedDate value={new Date()} /> // Например, \"3/14/2025\" (en-US) или \"14.3.2025\" (de-DE)\n<FormattedDate value={new Date()} weekday=\"long\" year=\"numeric\" month=\"long\" day=\"numeric\" /> // \"Friday, March 14, 2025\"\n\n// Отобразит время\n<FormattedTime value={new Date()} /> // Например, \"3:00:00 PM\" (en-US) или \"15:00:00\" (de-DE)",
              "numbers_title": "<strong>Числа и Валюты:</strong>",
              "numbers_code": "import { FormattedNumber, FormattedCurrency } from 'react-intl';\n\n// Отобразит число с локальным разделителем тысяч и десятичным знаком\n<FormattedNumber value={1234.56} /> // \"1,234.56\" (en-US) или \"1.234,56\" (de-DE)\n\n// Отобразит число как процент\n<FormattedNumber value={0.75} style=\"percent\" /> // \"75%\"\n\n// Отобразит число как валюту (требует кода валюты)\n<FormattedCurrency value={123.45} currency=\"USD\" /> // \"$123.45\" (en-US)",
              "outro": "Для работы с `react-intl` необходимо обернуть ваше приложение в `IntlProvider` и загрузить соответствующие данные локали (`react-intl/locale-data`)."
            },
            "section10": {
              "title": "10. Тестирование Локализации: Гарантия Качества (Принцип 3, 9)",
              "intro": "Тестирование — неотъемлемая часть системы обеспечения качества (Принцип 3, 9).",
              "scenarios_title": "<strong>Сценарии Тестирования:</strong>",
              "scenarios": [
                "<strong>Переключение языка:</strong> Убедитесь, что смена языка в настройках мгновенно (или после перезапуска, если требуется I18nManager) применяет новый перевод и RTL-макет.",
                "<strong>Отображение всех строк:</strong> Проверьте основные экраны и диалоги, чтобы убедиться, что все видимые пользователю строки переведены.",
                "<strong>Длинный текст:</strong> Проверьте UI с языками, известными своей длиной (например, немецкий, русский), чтобы убедиться, что текст не обрезается, элементы не накладываются друг на друга.",
                "<strong>RTL-интерфейс:</strong> Тщательно проверьте UI на арабском (или другом RTL-языке): направление текста, выравнивание элементов, отображение иконок направлений, положение скроллбаров.",
                "<strong>Интерполяция и Форматирование:</strong> Проверьте экраны, где используются динамические данные (имена, счетчики, даты, числа), убедитесь, что они форматируются правильно для текущей локали.",
                "<strong>Локализованные ошибки:</strong> Инициируйте различные ошибки (неправильный логин, отсутствие элемента), проверьте, что сообщения об ошибках приходят на выбранном языке."
              ],
              "tools_title": "<strong>Инструменты:</strong>",
              "tools": [
                "<strong>Ручное тестирование:</strong> Основной метод. Тестирование на реальных устройствах с разными локалями.",
                "<strong>Автоматизированные тесты (Cypress/Detox):</strong> Можно написать тесты, которые проверяют наличие определенных ключей перевода на странице или даже делают скриншоты UI для сравнения LTR/RTL макетов (Принцип 9: Система)."
              ],
              "success_criteria_title": "<strong>Критерии Успеха Тестирования:</strong>",
              "success_criteria": [
                "100% пользовательских строк переведены.",
                "Отсутствие обрезки или наложения текста в UI.",
                "Корректное и полное RTL-отображение для соответствующих языков.",
                "Правильное локализованное форматирование дат, чисел, валют."
              ]
            },
            "section11": {
              "title": "11. Примечания",
              "notes": [
                {
                  "title": "<strong>План:</strong>",
                  "description": "Полная реализация поддержки 5 ключевых языков запланирована на Q3 2025 (см. Дорожную карту), после завершения этапа построения технологического фундамента и начала разработки MVP."
                },
                {
                  "title": "<strong>Масштабирование:</strong>",
                  "description": "Система разработана так, чтобы добавление новых языков в будущем было эффективным (Принцип 9). Основные затраты — это сам перевод."
                },
                {
                  "title": "<strong>Ограничения:</strong>",
                  "description": "Технические логи, сообщения сервера для отладки не переводятся. Локализация касается только пользовательского интерфейса и сообщений, предназначенных для конечного пользователя."
                }
              ]
            }
          }
       }
  }
},
  "footer": {
    "sectionTitle": {
      "brand": "BrainMessenger",
      "quickLinks": "Быстрые Ссылки",
      "contact": "Контакты",
      "social": "Социальные Сети"
    },
    "quickLinks": {
      "home": "Главная",
      "features": "Функции",
      "news": "Новости",
      "roadmap": "Дорожная Карта",
      "faq": "FAQ",
      "doc": "Документация"
    },
    "brandContent": "Ваша умная платформа для общения.",
    "copyright": "© 2025 BrainMessenger. Все права защищены."
  }
}